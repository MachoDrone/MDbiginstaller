Looking at the errors:

The Cockpit is looking for nosana directory, not nosana-terminal
It's trying to load tools.html which doesn't exist - only index.html exists
Here's what needs to be fixed:

ok

For the TTY3 default login issue, we need to modify the GRUB configuration differently. The console=tty3 parameter doesn't make TTY3 the default login prompt. Instead, we need to configure systemd to make TTY3 the active console on boot:

ok

ok those last instructions to "do nothing, but say ok" was not meant for you. I need your help to fucking get Nosana Terminal working
You're absolutely right - let me help you get this working properly!

Based on the errors in your log, I can see the exact problem. Cockpit is looking for:

/cockpit/@localhost/nosana/tools.html (not nosana-terminal)
The manifest structure might need adjustment
Let me create a comprehensive fix script that addresses all the issues:

Now run this fix script on your system:

chmod +x /tmp/fix_nosana_cockpit.sh
sudo /tmp/fix_nosana_cockpit.sh
This script addresses the specific issues shown in your error logs:

Directory name: Uses /usr/share/cockpit/nosana/ (not nosana-terminal)
Tools.html: Creates a redirect file since Cockpit is looking for it
Better error handling: Shows clear errors if tmux session isn't available
Proper initialization: Waits for Cockpit to be ready before initializing terminal
Session recovery: Attempts to start the service if the tmux session doesn't exist
After running the script:

Clear your browser cache completely
Go to https://192.168.0.100:9090
Login to Cockpit
Look for "Nosana Terminal" in the menu
If it still doesn't show up, run these diagnostic commands and let me know the output:

sudo ls -la /usr/share/cockpit/ | grep nosana
sudo cat /usr/share/cockpit/nosana/manifest.json
tmux ls
sudo journalctl -u cockpit -n 20
can't we incorporate the fix in the existing script:
existing script:
#!/bin/bash

# Version number - this is the first thing printed when the script runs
VERSION="0.00.16"
TIMESTAMP=$(date '+%H:%M:%S %d%b%y' | tr '[:lower:]' '[:upper:]')
echo "Nosana Frontend Install Script - Version: $VERSION - Timestamp: $TIMESTAMP"

# Exit on error
set -e

# Check if running as root
if [ "$EUID" -ne 0 ]; then
  echo "Please run as root (sudo)."
  exit 1
fi

# Cleanup at start for idempotency
systemctl stop nosana-host.service 2>/dev/null || true
tmux kill-session -t nosana-host 2>/dev/null || true
echo "Initial cleanup completed."

# Use existing $USER for everything (detect dynamically)
NOSANA_USER=${SUDO_USER:-$(whoami)}
echo "Using existing user: $NOSANA_USER for Nosana operations."

# Update packages
apt update

# Install required packages individually if not present
if ! command -v tmux >/dev/null; then
  apt install -y tmux
  echo "tmux installed."
else
  echo "tmux already installed, skipping."
fi

if ! command -v wget >/dev/null; then
  apt install -y wget
  echo "wget installed."
else
  echo "wget already installed, skipping."
fi

if ! command -v curl >/dev/null; then
  apt install -y curl
  echo "curl installed."
else
  echo "curl already installed, skipping."
fi

if ! command -v docker >/dev/null; then
  apt install -y docker.io
  echo "docker.io installed."
else
  echo "Docker already installed (detected via command -v docker), skipping docker.io installation to avoid conflicts."
fi

# Ensure Docker is running and add $NOSANA_USER to docker group if not already
systemctl enable --now docker
if ! groups $NOSANA_USER | grep -q docker; then
  usermod -aG docker $NOSANA_USER
  echo "Added $NOSANA_USER to docker group (may require logout/reboot for effect)."
fi

# Check for Nosana config; warn if initial setup needed
if [ ! -f "/home/$NOSANA_USER/.nosana/nosana_key.json" ]; then
  echo "Warning: Nosana not configured yet. Run 'bash <(wget -qO- https://nosana.com/start.sh)' interactively once to set up (email, terms, benchmark). Then restart the service."
fi

# Create systemd service for Nosana host
cat <<EOF > /etc/systemd/system/nosana-host.service
[Unit]
Description=Nosana Host Service
After=docker.service
Requires=docker.service

[Service]
User=$NOSANA_USER
ExecStart=/bin/bash -c 'tmux new-session -d -s nosana-host "bash <(wget -qO- https://nosana.com/start.sh)" ; while tmux has-session -t nosana-host 2>/dev/null; do sleep 1; done'
ExecStop=/bin/bash -c 'tmux kill-session -t nosana-host 2>/dev/null'
Restart=on-failure
KillMode=process
RestartSec=5s

[Install]
WantedBy=multi-user.target
EOF

# Reload systemd and enable service
systemctl daemon-reload
systemctl enable nosana-host.service
# Start the service (simulates boot behavior without reboot)
systemctl start nosana-host.service
echo "Nosana host service created and started."

# Configure tmux to be minimal/invisible with red bold status bar instructions
sudo -u $NOSANA_USER bash -c 'cat <<EOF > ~/.tmux.conf
set -g status on
set -g status-style bg=black,fg=red,bold
set -g status-left ""
set -g status-right "Detach: Ctrl+q or Ctrl+b d | Then 'exit' to logout"
set -g mouse on  # Optional: for easier scrolling if needed
set -g history-limit 10000
bind-key -n C-q detach-client
EOF'
tmux kill-session -t nosana-host 2>/dev/null || true
systemctl start nosana-host.service
tmux source-file /home/$NOSANA_USER/.tmux.conf 2>/dev/null || true
echo "tmux configured for minimal UI with red bold status bar instructions, Ctrl+q for detach. Config sourced and session restarted."

# Set up TTY3 auto-attach via .bashrc (for interactive shells)
BASH_RC="/home/$NOSANA_USER/.bashrc"
if ! grep -q "tmux attach -t nosana-host" "$BASH_RC" 2>/dev/null; then
  cat <<EOF >> "$BASH_RC"
if [ "\$(tty)" = "/dev/tty3" ]; then
  echo "Attached to Nosana host tmux session. Instructions in status bar below."
  tmux attach-session -t nosana-host 2>/dev/null || true
fi
EOF
  chown $NOSANA_USER:$NOSANA_USER "$BASH_RC"
  su - $NOSANA_USER -c "source ~/.bashrc" 2>/dev/null || true
  echo "Added TTY3 auto-attach and status reference to .bashrc (logs in as $NOSANA_USER). Sourced for immediate effect."
else
  echo ".bashrc already configured for TTY3; skipping."
fi

# Remove old getty override if exists
rm -rf /etc/systemd/system/getty@tty3.service.d
systemctl daemon-reload

# Set KillUserProcesses=no for safety (to keep tmux running after logout)
LOGIND_CONF="/etc/systemd/logind.conf"
if grep -q "^KillUserProcesses=yes" "$LOGIND_CONF" 2>/dev/null || ! grep -q "^KillUserProcesses=" "$LOGIND_CONF" 2>/dev/null; then
  sed -i 's/^KillUserProcesses=yes/KillUserProcesses=no/' "$LOGIND_CONF" 2>/dev/null || echo "KillUserProcesses=no" >> "$LOGIND_CONF"
  systemctl restart systemd-logind
  echo "Set KillUserProcesses=no in logind.conf for tmux persistence after logout."
else
  echo "KillUserProcesses already set to no; skipping."
fi

# Make TTY3 default login prompt on boot
GRUB_CONF="/etc/default/grub"
if ! grep -q "console=tty3" "$GRUB_CONF"; then
  sed -i 's/GRUB_CMDLINE_LINUX_DEFAULT="/GRUB_CMDLINE_LINUX_DEFAULT="console=tty3 /g' "$GRUB_CONF"
  update-grub
  echo "Set TTY3 as default console on boot."
else
  echo "TTY3 already set as default; skipping."
fi

# Add custom persistent terminal to Cockpit
# Check if directory exists to avoid overwrite (idempotent)
NOSANA_DIR="/usr/share/cockpit/nosana-terminal"
if [ ! -d "$NOSANA_DIR" ]; then
  mkdir -p "$NOSANA_DIR"
fi
cat <<EOF > "$NOSANA_DIR/manifest.json"
{
    "version": 0,
    "menu": {
        "index": {
            "label": "Nosana Terminal",
            "order": 45
        }
    },
    "tools": {
        "index": {
            "label": "Nosana Terminal"
        }
    }
}
EOF

# Create the HTML/JS with correct src
cat <<EOF > "$NOSANA_DIR/index.html"
<!DOCTYPE html>
<html>
<head>
    <title>Nosana Terminal</title>
    <meta charset="utf-8">
    <link href="../base1/cockpit.css" type="text/css" rel="stylesheet">
    <script src="../base1/cockpit.js"></script>
</head>
<body>
    <div class="pf-c-page">
        <main class="pf-c-page__main" tabindex="-1">
            <section class="pf-c-page__main-section pf-m-light">
                <div class="pf-c-content">
                    <h1>Nosana Terminal</h1>
                </div>
            </section>
            <section class="pf-c-page__main-section">
                <div id="terminal-container" class="metrics-container">
                    <div class="pf-c-card">
                        <div class="pf-c-card__body">
                            <div id="terminal"></div>
                        </div>
                    </div>
                </div>
            </section>
        </main>
    </div>
    <script>
        const term = cockpit.terminal(document.getElementById('terminal'));
        const proc = cockpit.spawn(["tmux", "attach", "-t", "nosana-host"], { pty: true });
        proc.stream(data => term.write(data));
        term.onData(data => proc.input(data));
        proc.done(() => term.close());
    </script>
</body>
</html>
EOF

echo "Custom Nosana Persistent Terminal files updated to match Claude's GPU Monitor structure."

# Restart Cockpit to load the new module
systemctl restart cockpit.socket cockpit
echo "Cockpit restarted (including socket) to load Nosana Terminal module."

# GPU Monitor: Already installed per ls output, so skipped

# Final reboot (commented out for testing)
# echo "Installation complete. Rebooting..."
# reboot

echo "Installation complete. Reboot commented out for testing. Verify via systemctl status nosana-host, tmux ls, and Cockpit at https://your-ip:9090/nosana-terminal (menu label 'Nosana Terminal'). For TTY3, login on Ctrl+Alt+F3 to test auto-attach, status bar, Ctrl+q for detach+logout. Run 'sudo reboot' to test auto-start and TTY3 default."
Absolutely! Let me incorporate the fixes directly into your existing script. The main issues are:

Wrong directory name (should be /usr/share/cockpit/nosana, not nosana-terminal)
Need to add the tools.html file that Cockpit is looking for
Better terminal initialization in the JavaScript
Here's the updated script with the fixes incorporated:

Perfect! I've created the fixed version (0.00.17) with all the necessary corrections:

Key fixes implemented:

Correct directory name: Changed from /usr/share/cockpit/nosana-terminal to /usr/share/cockpit/nosana (matching what Cockpit is looking for)

Added tools.html: Created a redirect file since Cockpit is trying to load this file

Improved terminal initialization:

Waits for Cockpit transport to be ready
Better error handling with automatic service restart
Proper terminal options
Fixed TTY3 default: Instead of using GRUB (which doesn't work), created a systemd service that switches to TTY3 after boot using chvt 3

Better manifest structure: Simplified to match what Cockpit expects

Now you can run:

chmod +x /tmp/addtmux-and-sysd-fixed.sh
sudo /tmp/addtmux-and-sysd-fixed.sh
After running:

Clear your browser cache completely (Ctrl+Shift+Delete)
Go to https://192.168.0.100:9090
Look for "Nosana Terminal" in the menu
The script will also make TTY3 the default console after reboot (it will automatically switch to TTY3 after the system boots).

i can't see the script because cursor didn't provide me a PR button. can you print the script here, please?
Here's the complete fixed script (version 0.00.17):

#!/bin/bash

# Version number - this is the first thing printed when the script runs
VERSION="0.00.17"
TIMESTAMP=$(date '+%H:%M:%S %d%b%y' | tr '[:lower:]' '[:upper:]')
echo "Nosana Frontend Install Script - Version: $VERSION - Timestamp: $TIMESTAMP"

# Exit on error
set -e

# Check if running as root
if [ "$EUID" -ne 0 ]; then
  echo "Please run as root (sudo)."
  exit 1
fi

# Cleanup at start for idempotency
systemctl stop nosana-host.service 2>/dev/null || true
tmux kill-session -t nosana-host 2>/dev/null || true
echo "Initial cleanup completed."

# Use existing $USER for everything (detect dynamically)
NOSANA_USER=${SUDO_USER:-$(whoami)}
echo "Using existing user: $NOSANA_USER for Nosana operations."

# Update packages
apt update

# Install required packages individually if not present
if ! command -v tmux >/dev/null; then
  apt install -y tmux
  echo "tmux installed."
else
  echo "tmux already installed, skipping."
fi

if ! command -v wget >/dev/null; then
  apt install -y wget
  echo "wget installed."
else
  echo "wget already installed, skipping."
fi

if ! command -v curl >/dev/null; then
  apt install -y curl
  echo "curl installed."
else
  echo "curl already installed, skipping."
fi

if ! command -v docker >/dev/null; then
  apt install -y docker.io
  echo "docker.io installed."
else
  echo "Docker already installed (detected via command -v docker), skipping docker.io installation to avoid conflicts."
fi

# Ensure Docker is running and add $NOSANA_USER to docker group if not already
systemctl enable --now docker
if ! groups $NOSANA_USER | grep -q docker; then
  usermod -aG docker $NOSANA_USER
  echo "Added $NOSANA_USER to docker group (may require logout/reboot for effect)."
fi

# Check for Nosana config; warn if initial setup needed
if [ ! -f "/home/$NOSANA_USER/.nosana/nosana_key.json" ]; then
  echo "Warning: Nosana not configured yet. Run 'bash <(wget -qO- https://nosana.com/start.sh)' interactively once to set up (email, terms, benchmark). Then restart the service."
fi

# Create systemd service for Nosana host
cat <<EOF > /etc/systemd/system/nosana-host.service
[Unit]
Description=Nosana Host Service
After=docker.service
Requires=docker.service

[Service]
User=$NOSANA_USER
ExecStart=/bin/bash -c 'tmux new-session -d -s nosana-host "bash <(wget -qO- https://nosana.com/start.sh)" ; while tmux has-session -t nosana-host 2>/dev/null; do sleep 1; done'
ExecStop=/bin/bash -c 'tmux kill-session -t nosana-host 2>/dev/null'
Restart=on-failure
KillMode=process
RestartSec=5s

[Install]
WantedBy=multi-user.target
EOF

# Reload systemd and enable service
systemctl daemon-reload
systemctl enable nosana-host.service
# Start the service (simulates boot behavior without reboot)
systemctl start nosana-host.service
echo "Nosana host service created and started."

# Configure tmux to be minimal/invisible with red bold status bar instructions
sudo -u $NOSANA_USER bash -c 'cat <<EOF > ~/.tmux.conf
set -g status on
set -g status-style bg=black,fg=red,bold
set -g status-left ""
set -g status-right "Detach: Ctrl+q or Ctrl+b d | Then 'exit' to logout"
set -g mouse on  # Optional: for easier scrolling if needed
set -g history-limit 10000
bind-key -n C-q detach-client
EOF'
tmux kill-session -t nosana-host 2>/dev/null || true
systemctl start nosana-host.service
tmux source-file /home/$NOSANA_USER/.tmux.conf 2>/dev/null || true
echo "tmux configured for minimal UI with red bold status bar instructions, Ctrl+q for detach. Config sourced and session restarted."

# Set up TTY3 auto-attach via .bashrc (for interactive shells)
BASH_RC="/home/$NOSANA_USER/.bashrc"
if ! grep -q "tmux attach -t nosana-host" "$BASH_RC" 2>/dev/null; then
  cat <<EOF >> "$BASH_RC"
if [ "\$(tty)" = "/dev/tty3" ]; then
  echo "Attached to Nosana host tmux session. Instructions in status bar below."
  tmux attach-session -t nosana-host 2>/dev/null || true
fi
EOF
  chown $NOSANA_USER:$NOSANA_USER "$BASH_RC"
  su - $NOSANA_USER -c "source ~/.bashrc" 2>/dev/null || true
  echo "Added TTY3 auto-attach and status reference to .bashrc (logs in as $NOSANA_USER). Sourced for immediate effect."
else
  echo ".bashrc already configured for TTY3; skipping."
fi

# Remove old getty override if exists
rm -rf /etc/systemd/system/getty@tty3.service.d
systemctl daemon-reload

# Set KillUserProcesses=no for safety (to keep tmux running after logout)
LOGIND_CONF="/etc/systemd/logind.conf"
if grep -q "^KillUserProcesses=yes" "$LOGIND_CONF" 2>/dev/null || ! grep -q "^KillUserProcesses=" "$LOGIND_CONF" 2>/dev/null; then
  sed -i 's/^KillUserProcesses=yes/KillUserProcesses=no/' "$LOGIND_CONF" 2>/dev/null || echo "KillUserProcesses=no" >> "$LOGIND_CONF"
  systemctl restart systemd-logind
  echo "Set KillUserProcesses=no in logind.conf for tmux persistence after logout."
else
  echo "KillUserProcesses already set to no; skipping."
fi

# Make TTY3 default login prompt on boot (FIXED VERSION)
# Create systemd service to switch to TTY3 after boot
cat <<'EOF' > /etc/systemd/system/switch-to-tty3.service
[Unit]
Description=Switch to TTY3 on boot
After=multi-user.target

[Service]
Type=oneshot
ExecStart=/usr/bin/chvt 3
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
systemctl enable switch-to-tty3.service
echo "Created service to switch to TTY3 on boot."

# Add custom persistent terminal to Cockpit (FIXED VERSION)
# Remove any old directories first
rm -rf /usr/share/cockpit/nosana-terminal 2>/dev/null || true
rm -rf /usr/share/cockpit/nosana 2>/dev/null || true

# Create the directory with the correct name that Cockpit expects
NOSANA_DIR="/usr/share/cockpit/nosana"
mkdir -p "$NOSANA_DIR"

# Create manifest.json
cat <<EOF > "$NOSANA_DIR/manifest.json"
{
    "version": 0,
    "menu": {
        "index": {
            "label": "Nosana Terminal",
            "order": 100,
            "docs": [
                {
                    "label": "Nosana Terminal",
                    "url": "index"
                }
            ]
        }
    }
}
EOF

# Create the main index.html with improved terminal handling
cat <<'EOF' > "$NOSANA_DIR/index.html"
<!DOCTYPE html>
<html>
<head>
    <title>Nosana Terminal</title>
    <meta charset="utf-8">
    <link href="../base1/cockpit.css" type="text/css" rel="stylesheet">
    <script src="../base1/cockpit.js"></script>
    <style>
        body {
            margin: 0;
            padding: 0;
        }
        .terminal-container {
            height: calc(100vh - 4rem);
            background-color: #000;
            padding: 1rem;
        }
        #terminal {
            height: 100%;
            width: 100%;
        }
        .connection-error {
            color: #ff6b6b;
            padding: 1rem;
            background-color: #2d2d2d;
            border-radius: 4px;
            margin: 1rem;
        }
    </style>
</head>
<body>
    <div class="pf-c-page">
        <main class="pf-c-page__main" tabindex="-1">
            <section class="pf-c-page__main-section pf-m-light">
                <div class="pf-c-content">
                    <h1>Nosana Terminal</h1>
                    <p>Connected to nosana-host tmux session</p>
                </div>
            </section>
            <section class="pf-c-page__main-section">
                <div class="terminal-container">
                    <div id="terminal"></div>
                    <div id="error-container"></div>
                </div>
            </section>
        </main>
    </div>
    <script>
        // Wait for Cockpit to be ready
        cockpit.transport.wait(function() {
            console.log("Cockpit ready, initializing Nosana terminal...");
            
            const terminalElement = document.getElementById('terminal');
            const errorContainer = document.getElementById('error-container');
            
            try {
                // Create terminal
                const term = cockpit.terminal(terminalElement, {
                    rows: 30,
                    cols: 80
                });
                
                // Spawn tmux attach command
                const proc = cockpit.spawn(
                    ["tmux", "attach-session", "-t", "nosana-host"],
                    {
                        pty: true,
                        environ: ["TERM=xterm-256color"],
                        err: "out"
                    }
                );
                
                // Handle data stream
                proc.stream(function(data) {
                    term.write(data);
                });
                
                // Handle input
                term.onData(function(data) {
                    proc.input(data);
                });
                
                // Handle process completion
                proc.done(function() {
                    console.log("Terminal session ended");
                    term.write("\r\n\r\n[Session ended - refresh to reconnect]\r\n");
                });
                
                // Handle errors
                proc.fail(function(ex) {
                    console.error("Terminal error:", ex);
                    errorContainer.innerHTML = '<div class="connection-error">Failed to connect to nosana-host session: ' + ex.message + '</div>';
                    
                    // Try to create session if it doesn't exist
                    errorContainer.innerHTML += '<p>Attempting to restart nosana-host service...</p>';
                    cockpit.spawn(["systemctl", "restart", "nosana-host.service"], { superuser: "try" })
                        .done(function() {
                            setTimeout(function() {
                                location.reload();
                            }, 3000);
                            errorContainer.innerHTML += '<p>Service restarted. Reloading page in 3 seconds...</p>';
                        })
                        .fail(function(err) {
                            errorContainer.innerHTML += '<p>Failed to restart service: ' + err.message + '</p>';
                        });
                });
                
            } catch (e) {
                console.error("Failed to initialize terminal:", e);
                errorContainer.innerHTML = '<div class="connection-error">Failed to initialize terminal: ' + e.message + '</div>';
            }
        });
    </script>
</body>
</html>
EOF

# Create tools.html that redirects to index (Cockpit is looking for this)
cat <<'EOF' > "$NOSANA_DIR/tools.html"
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="refresh" content="0; url=index.html">
</head>
<body>
    <p>Redirecting to Nosana Terminal...</p>
</body>
</html>
EOF

# Set proper permissions
chown -R root:root "$NOSANA_DIR"
chmod -R 755 "$NOSANA_DIR"

echo "Custom Nosana Terminal files created in correct location (/usr/share/cockpit/nosana/)."

# Restart Cockpit to load the new module
systemctl restart cockpit.socket cockpit
echo "Cockpit restarted to load Nosana Terminal module."

# Final instructions
echo ""
echo "============================================"
echo "Installation complete!"
echo "============================================"
echo ""
echo "To verify installation:"
echo "1. Check service status: systemctl status nosana-host"
echo "2. Check tmux session: tmux ls"
echo "3. Access Cockpit: https://192.168.0.100:9090"
echo "   - Clear browser cache (Ctrl+Shift+Delete)"
echo "   - Look for 'Nosana Terminal' in the menu"
echo ""
echo "For TTY3 access:"
echo "- Press Ctrl+Alt+F3 to switch to TTY3"
echo "- Login with your user credentials"
echo "- You'll automatically attach to the Nosana tmux session"
echo "- Press Ctrl+q to detach, then type 'exit' to logout"
echo ""
echo "To make TTY3 the default console on boot, run: sudo reboot"
echo ""
echo "Troubleshooting commands:"
echo "  sudo journalctl -u nosana-host -f"
echo "  sudo journalctl -u cockpit -f"
echo "  sudo ls -la /usr/share/cockpit/nosana/"
echo ""
Save this as addtmux-and-sysd.sh, make it executable with chmod +x addtmux-and-sysd.sh, and run it with sudo ./addtmux-and-sysd.sh.

md@nn06:~$ > addtmux-and-sysd.sh && chmod +x addtmux-and-sysd.sh && nano addtmux-and-sysd.sh && cat addtmux-and-sysd.sh &&sudo ./addtmux-and-sysd.sh
#!/bin/bash

# Version number - this is the first thing printed when the script runs
VERSION="0.00.17"
TIMESTAMP=$(date '+%H:%M:%S %d%b%y' | tr '[:lower:]' '[:upper:]')
echo "Nosana Frontend Install Script - Version: $VERSION - Timestamp: $TIMESTAMP"

# Exit on error
set -e

# Check if running as root
if [ "$EUID" -ne 0 ]; then
  echo "Please run as root (sudo)."
  exit 1
fi

# Cleanup at start for idempotency
systemctl stop nosana-host.service 2>/dev/null || true
tmux kill-session -t nosana-host 2>/dev/null || true
echo "Initial cleanup completed."

# Use existing $USER for everything (detect dynamically)
NOSANA_USER=${SUDO_USER:-$(whoami)}
echo "Using existing user: $NOSANA_USER for Nosana operations."

# Update packages
apt update

# Install required packages individually if not present
if ! command -v tmux >/dev/null; then
  apt install -y tmux
  echo "tmux installed."
else
  echo "tmux already installed, skipping."
fi

if ! command -v wget >/dev/null; then
  apt install -y wget
  echo "wget installed."
else
  echo "wget already installed, skipping."
fi

if ! command -v curl >/dev/null; then
  apt install -y curl
  echo "curl installed."
else
  echo "curl already installed, skipping."
fi

if ! command -v docker >/dev/null; then
  apt install -y docker.io
  echo "docker.io installed."
else
  echo "Docker already installed (detected via command -v docker), skipping docker.io installation to avoid conflicts."
fi

# Ensure Docker is running and add $NOSANA_USER to docker group if not already
systemctl enable --now docker
if ! groups $NOSANA_USER | grep -q docker; then
  usermod -aG docker $NOSANA_USER
  echo "Added $NOSANA_USER to docker group (may require logout/reboot for effect)."
fi

# Check for Nosana config; warn if initial setup needed
if [ ! -f "/home/$NOSANA_USER/.nosana/nosana_key.json" ]; then
  echo "Warning: Nosana not configured yet. Run 'bash <(wget -qO- https://nosana.com/start.sh)' interactively once to set up (email, terms, benchmark). Then restart the service."
fi

# Create systemd service for Nosana host
cat <<EOF > /etc/systemd/system/nosana-host.service
[Unit]
Description=Nosana Host Service
After=docker.service
Requires=docker.service

[Service]
User=$NOSANA_USER
ExecStart=/bin/bash -c 'tmux new-session -d -s nosana-host "bash <(wget -qO- https://nosana.com/start.sh)" ; while tmux has-session -t nosana-host 2>/dev/null; do sleep 1; done'
ExecStop=/bin/bash -c 'tmux kill-session -t nosana-host 2>/dev/null'
Restart=on-failure
KillMode=process
RestartSec=5s

[Install]
WantedBy=multi-user.target
EOF

# Reload systemd and enable service
systemctl daemon-reload
systemctl enable nosana-host.service
# Start the service (simulates boot behavior without reboot)
systemctl start nosana-host.service
echo "Nosana host service created and started."

# Configure tmux to be minimal/invisible with red bold status bar instructions
sudo -u $NOSANA_USER bash -c 'cat <<EOF > ~/.tmux.conf
set -g status on
set -g status-style bg=black,fg=red,bold
set -g status-left ""
set -g status-right "Detach: Ctrl+q or Ctrl+b d | Then 'exit' to logout"
set -g mouse on  # Optional: for easier scrolling if needed
set -g history-limit 10000
bind-key -n C-q detach-client
EOF'
tmux kill-session -t nosana-host 2>/dev/null || true
systemctl start nosana-host.service
tmux source-file /home/$NOSANA_USER/.tmux.conf 2>/dev/null || true
echo "tmux configured for minimal UI with red bold status bar instructions, Ctrl+q for detach. Config sourced and session restarted."

# Set up TTY3 auto-attach via .bashrc (for interactive shells)
BASH_RC="/home/$NOSANA_USER/.bashrc"
if ! grep -q "tmux attach -t nosana-host" "$BASH_RC" 2>/dev/null; then
  cat <<EOF >> "$BASH_RC"
if [ "\$(tty)" = "/dev/tty3" ]; then
  echo "Attached to Nosana host tmux session. Instructions in status bar below."
  tmux attach-session -t nosana-host 2>/dev/null || true
fi
EOF
  chown $NOSANA_USER:$NOSANA_USER "$BASH_RC"
  su - $NOSANA_USER -c "source ~/.bashrc" 2>/dev/null || true
  echo "Added TTY3 auto-attach and status reference to .bashrc (logs in as $NOSANA_USER). Sourced for immediate effect."
else
  echo ".bashrc already configured for TTY3; skipping."
fi

# Remove old getty override if exists
rm -rf /etc/systemd/system/getty@tty3.service.d
systemctl daemon-reload

# Set KillUserProcesses=no for safety (to keep tmux running after logout)
LOGIND_CONF="/etc/systemd/logind.conf"
if grep -q "^KillUserProcesses=yes" "$LOGIND_CONF" 2>/dev/null || ! grep -q "^KillUserProcesses=" "$LOGIND_CONF" 2>/dev/null; then
  sed -i 's/^KillUserProcesses=yes/KillUserProcesses=no/' "$LOGIND_CONF" 2>/dev/null || echo "KillUserProcesses=no" >> "$LOGIND_CONF"
  systemctl restart systemd-logind
  echo "Set KillUserProcesses=no in logind.conf for tmux persistence after logout."
else
  echo "KillUserProcesses already set to no; skipping."
fi

# Make TTY3 default login prompt on boot (FIXED VERSION)
# Create systemd service to switch to TTY3 after boot
cat <<'EOF' > /etc/systemd/system/switch-to-tty3.service
[Unit]
Description=Switch to TTY3 on boot
After=multi-user.target

[Service]
Type=oneshot
ExecStart=/usr/bin/chvt 3
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
systemctl enable switch-to-tty3.service
echo "Created service to switch to TTY3 on boot."

# Add custom persistent terminal to Cockpit (FIXED VERSION)
# Remove any old directories first
rm -rf /usr/share/cockpit/nosana-terminal 2>/dev/null || true
rm -rf /usr/share/cockpit/nosana 2>/dev/null || true

# Create the directory with the correct name that Cockpit expects
NOSANA_DIR="/usr/share/cockpit/nosana"
mkdir -p "$NOSANA_DIR"

# Create manifest.json
cat <<EOF > "$NOSANA_DIR/manifest.json"
{
    "version": 0,
    "menu": {
        "index": {
            "label": "Nosana Terminal",
            "order": 100,
            "docs": [
                {
                    "label": "Nosana Terminal",
                    "url": "index"
                }
            ]
        }
    }
}
EOF

# Create the main index.html with improved terminal handling
cat <<'EOF' > "$NOSANA_DIR/index.html"
<!DOCTYPE html>
<html>
<head>
    <title>Nosana Terminal</title>
    <meta charset="utf-8">
    <link href="../base1/cockpit.css" type="text/css" rel="stylesheet">
    <script src="../base1/cockpit.js"></script>
    <style>
        body {
            margin: 0;
            padding: 0;
        }
        .terminal-container {
            height: calc(100vh - 4rem);
            background-color: #000;
            padding: 1rem;
        }
        #terminal {
            height: 100%;
            width: 100%;
        }
        .connection-error {
            color: #ff6b6b;
            padding: 1rem;
            background-color: #2d2d2d;
            border-radius: 4px;
            margin: 1rem;
        }
    </style>
</head>
<body>
    <div class="pf-c-page">
        <main class="pf-c-page__main" tabindex="-1">
            <section class="pf-c-page__main-section pf-m-light">
                <div class="pf-c-content">
                    <h1>Nosana Terminal</h1>
                    <p>Connected to nosana-host tmux session</p>
                </div>
            </section>
            <section class="pf-c-page__main-section">
                <div class="terminal-container">
                    <div id="terminal"></div>
                    <div id="error-container"></div>
                </div>
            </section>
        </main>
    </div>
    <script>
        // Wait for Cockpit to be ready
        cockpit.transport.wait(function() {
            console.log("Cockpit ready, initializing Nosana terminal...");
            
            const terminalElement = document.getElementById('terminal');
            const errorContainer = document.getElementById('error-container');
            
            try {
                // Create terminal
                const term = cockpit.terminal(terminalElement, {
                    rows: 30,
                    cols: 80
                });
                
                // Spawn tmux attach command
                const proc = cockpit.spawn(
                    ["tmux", "attach-session", "-t", "nosana-host"],
                    {
                        pty: true,
                        environ: ["TERM=xterm-256color"],
                        err: "out"
                    }
                );
                
                // Handle data stream
                proc.stream(function(data) {
                    term.write(data);
                });
                
                // Handle input
                term.onData(function(data) {
                    proc.input(data);
                });
                
                // Handle process completion
                proc.done(function() {
                    console.log("Terminal session ended");
                    term.write("\r\n\r\n[Session ended - refresh to reconnect]\r\n");
                });
                
                // Handle errors
                proc.fail(function(ex) {
                    console.error("Terminal error:", ex);
                    errorContainer.innerHTML = '<div class="connection-error">Failed to connect to nosana-host session: ' + ex.message + '</div>';
                    
                    // Try to create session if it doesn't exist
                    errorContainer.innerHTML += '<p>Attempting to restart nosana-host service...</p>';
                    cockpit.spawn(["systemctl", "restart", "nosana-host.service"], { superuser: "try" })
                        .done(function() {
                            setTimeout(function() {
                                location.reload();
                            }, 3000);
                            errorContainer.innerHTML += '<p>Service restarted. Reloading page in 3 seconds...</p>';
                        })
                        .fail(function(err) {
                            errorContainer.innerHTML += '<p>Failed to restart service: ' + err.message + '</p>';
                        });
                });
                
            } catch (e) {
                console.error("Failed to initialize terminal:", e);
                errorContainer.innerHTML = '<div class="connection-error">Failed to initialize terminal: ' + e.message + '</div>';
            }
        });
    </script>
</body>
</html>
EOF

# Create tools.html that redirects to index (Cockpit is looking for this)
cat <<'EOF' > "$NOSANA_DIR/tools.html"
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="refresh" content="0; url=index.html">
</head>
<body>
    <p>Redirecting to Nosana Terminal...</p>
</body>
</html>
EOF

# Set proper permissions
chown -R root:root "$NOSANA_DIR"
chmod -R 755 "$NOSANA_DIR"

echo "Custom Nosana Terminal files created in correct location (/usr/share/cockpit/nosana/)."

# Restart Cockpit to load the new module
systemctl restart cockpit.socket cockpit
echo "Cockpit restarted to load Nosana Terminal module."

# Final instructions
echo ""
echo "============================================"
echo "Installation complete!"
echo "============================================"
echo ""
echo "To verify installation:"
echo "1. Check service status: systemctl status nosana-host"
echo "2. Check tmux session: tmux ls"
echo "3. Access Cockpit: https://192.168.0.100:9090"
echo "   - Clear browser cache (Ctrl+Shift+Delete)"
echo "   - Look for 'Nosana Terminal' in the menu"
echo ""
echo "For TTY3 access:"
echo "- Press Ctrl+Alt+F3 to switch to TTY3"
echo "- Login with your user credentials"
echo "- You'll automatically attach to the Nosana tmux session"
echo "- Press Ctrl+q to detach, then type 'exit' to logout"
echo ""
echo "To make TTY3 the default console on boot, run: sudo reboot"
echo ""
echo "Troubleshooting commands:"
echo "  sudo journalctl -u nosana-host -f"
echo "  sudo journalctl -u cockpit -f"
echo "  sudo ls -la /usr/share/cockpit/nosana/"
echo ""
[sudo] password for md: 
Nosana Frontend Install Script - Version: 0.00.17 - Timestamp: 17:33:52 28JUL25
Initial cleanup completed.
Using existing user: md for Nosana operations.
Hit:1 https://nvidia.github.io/libnvidia-container/stable/deb/amd64  InRelease
Hit:2 http://us.archive.ubuntu.com/ubuntu noble InRelease                                                                                   
Hit:3 https://download.docker.com/linux/ubuntu noble InRelease                                                                              
Hit:4 http://us.archive.ubuntu.com/ubuntu noble-updates InRelease                                                                           
Hit:5 http://us.archive.ubuntu.com/ubuntu noble-backports InRelease                                     
Hit:6 http://security.ubuntu.com/ubuntu noble-security InRelease                                        
Hit:7 https://ppa.launchpadcontent.net/graphics-drivers/ppa/ubuntu noble InRelease
Reading package lists... Done                              
Building dependency tree... Done
Reading state information... Done
1 package can be upgraded. Run 'apt list --upgradable' to see it.
tmux already installed, skipping.
wget already installed, skipping.
curl already installed, skipping.
Docker already installed (detected via command -v docker), skipping docker.io installation to avoid conflicts.
Synchronizing state of docker.service with SysV service script with /usr/lib/systemd/systemd-sysv-install.
Executing: /usr/lib/systemd/systemd-sysv-install enable docker
Nosana host service created and started.
tmux configured for minimal UI with red bold status bar instructions, Ctrl+q for detach. Config sourced and session restarted.
Added TTY3 auto-attach and status reference to .bashrc (logs in as md). Sourced for immediate effect.
Set KillUserProcesses=no in logind.conf for tmux persistence after logout.
Created symlink /etc/systemd/system/multi-user.target.wants/switch-to-tty3.service → /etc/systemd/system/switch-to-tty3.service.
Created service to switch to TTY3 on boot.
Custom Nosana Terminal files created in correct location (/usr/share/cockpit/nosana/).
Cockpit restarted to load Nosana Terminal module.

============================================
Installation complete!
============================================

To verify installation:
1. Check service status: systemctl status nosana-host
2. Check tmux session: tmux ls
3. Access Cockpit: https://192.168.0.100:9090
   - Clear browser cache (Ctrl+Shift+Delete)
   - Look for 'Nosana Terminal' in the menu

For TTY3 access:
- Press Ctrl+Alt+F3 to switch to TTY3
- Login with your user credentials
- You'll automatically attach to the Nosana tmux session
- Press Ctrl+q to detach, then type 'exit' to logout

To make TTY3 the default console on boot, run: sudo reboot

Troubleshooting commands:
  sudo journalctl -u nosana-host -f
  sudo journalctl -u cockpit -f
  sudo ls -la /usr/share/cockpit/nosana/

md@nn06:~$ sudo reboot


TTY3 was the TTY waiting on my local login.

ctrl-q detaches from tmux, but it doesn't exit the tty or logout. I want ctrl-q to take me to the login prompt. does this make sense?

This is all i see:
Nosana Terminal
Connected to nosana-host tmux session


Navigated to https://192.168.0.100:9090/nosana
nosana:1 Refused to execute script from 'https://192.168.0.100:9090/cockpit/@localhost/*/po.manifest.js' because its MIME type ('text/html') is not executable, and strict MIME type checking is enabled.Understand this error
nosana:1 Refused to execute script from 'https://192.168.0.100:9090/cockpit/@localhost/*/po.js' because its MIME type ('text/html') is not executable, and strict MIME type checking is enabled.Understand this error
cockpit/@localhost/nosana/index.html#/:1 Refused to apply style from 'https://192.168.0.100:9090/cockpit/@localhost/base1/cockpit.css' because its MIME type ('text/html') is not a supported stylesheet MIME type, and strict MIME checking is enabled.Understand this error
cockpit/@localhost/nosana/index.html#/:1 Refused to apply style from 'https://192.168.0.100:9090/cockpit/@localhost/base1/cockpit.css' because its MIME type ('text/html') is not a supported stylesheet MIME type, and strict MIME checking is enabled.Understand this error
cockpit/@localhost/nosana/index.html#/:8 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-60lpaGfaAHhI9Q0QY1Hcact1oUrz+FQ5YFoRk2+L/iY='), or a nonce ('nonce-...') is required to enable inline execution. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.
Understand this error
cockpit/@localhost/nosana/index.html#/:48 Refused to execute inline script because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-C4Zu8A8s1Mz36+hva4Kankcp199K5Dwf/qVCdfFcAjY='), or a nonce ('nonce-...') is required to enable inline execution. Note also that 'script-src' was not explicitly set, so 'default-src' is used as a fallback.


Great progress! TTY3 is working as default. Now let's fix the two remaining issues:

Ctrl+q logout issue - We need to make Ctrl+q actually log you out after detaching
Cockpit CSP errors - The Content Security Policy is blocking our inline styles and scripts
Let me create a fix for both:

Now run this fix:

chmod +x /tmp/fix-nosana-issues.sh
sudo /tmp/fix-nosana-issues.sh
This fix addresses both issues:

TTY3 logout: Changed the .bashrc to use exit after tmux detaches. Now when you press Ctrl+q to detach from tmux, the shell will exit and return you to the login prompt.

Cockpit CSP errors: Moved the inline CSS and JavaScript to external files (terminal.css and terminal.js). This avoids the Content Security Policy violations that were blocking the inline code.

After running the fix:

Test TTY3: Press Ctrl+Alt+F3, login, and you'll attach to tmux. Press Ctrl+q and you should be logged out.
Test Cockpit: Clear your browser cache completely, then navigate to https://192.168.0.100:9090 and look for "Nosana Terminal" in the menu.
If you still don't see the terminal working in Cockpit, let me know and I'll help debug further. We might need to check if the tmux session is accessible from the Cockpit user context.

you always need to print the code. cursor.com is broken and is not interfacing with github today.
You're right, here's the complete fix script:

#!/bin/bash

echo "Fixing Nosana Terminal issues..."

# Fix 1: Update .bashrc to handle logout after tmux detach
NOSANA_USER=${SUDO_USER:-$(whoami)}
BASH_RC="/home/$NOSANA_USER/.bashrc"

# Remove old TTY3 configuration
sed -i '/if \[ "$(tty)" = "\/dev\/tty3" \]; then/,/fi/d' "$BASH_RC"

# Add new TTY3 configuration with auto-logout
cat <<'EOF' >> "$BASH_RC"
if [ "$(tty)" = "/dev/tty3" ]; then
  echo "Attached to Nosana host tmux session. Instructions in status bar below."
  tmux attach-session -t nosana-host 2>/dev/null
  # If tmux exits (detached or session ended), logout immediately
  exit
fi
EOF

chown $NOSANA_USER:$NOSANA_USER "$BASH_RC"
echo "Updated .bashrc to auto-logout after tmux detach"

# Fix 2: Cockpit module - move JavaScript to external file to avoid CSP issues
NOSANA_DIR="/usr/share/cockpit/nosana"

# Create the JavaScript file separately
cat <<'EOF' > "$NOSANA_DIR/terminal.js"
// Wait for Cockpit to be ready
cockpit.transport.wait(function() {
    console.log("Cockpit ready, initializing Nosana terminal...");
    
    const terminalElement = document.getElementById('terminal');
    const errorContainer = document.getElementById('error-container');
    
    try {
        // Create terminal
        const term = cockpit.terminal(terminalElement, {
            rows: 30,
            cols: 80
        });
        
        // Spawn tmux attach command
        const proc = cockpit.spawn(
            ["tmux", "attach-session", "-t", "nosana-host"],
            {
                pty: true,
                environ: ["TERM=xterm-256color"],
                err: "out"
            }
        );
        
        // Handle data stream
        proc.stream(function(data) {
            term.write(data);
        });
        
        // Handle input
        term.onData(function(data) {
            proc.input(data);
        });
        
        // Handle process completion
        proc.done(function() {
            console.log("Terminal session ended");
            term.write("\r\n\r\n[Session ended - refresh to reconnect]\r\n");
        });
        
        // Handle errors
        proc.fail(function(ex) {
            console.error("Terminal error:", ex);
            errorContainer.innerHTML = '<div class="connection-error">Failed to connect to nosana-host session: ' + ex.message + '</div>';
            
            // Try to create session if it doesn't exist
            errorContainer.innerHTML += '<p>Attempting to restart nosana-host service...</p>';
            cockpit.spawn(["systemctl", "restart", "nosana-host.service"], { superuser: "try" })
                .done(function() {
                    setTimeout(function() {
                        location.reload();
                    }, 3000);
                    errorContainer.innerHTML += '<p>Service restarted. Reloading page in 3 seconds...</p>';
                })
                .fail(function(err) {
                    errorContainer.innerHTML += '<p>Failed to restart service: ' + err.message + '</p>';
                });
        });
        
    } catch (e) {
        console.error("Failed to initialize terminal:", e);
        errorContainer.innerHTML = '<div class="connection-error">Failed to initialize terminal: ' + e.message + '</div>';
    }
});
EOF

# Create the CSS file separately
cat <<'EOF' > "$NOSANA_DIR/terminal.css"
body {
    margin: 0;
    padding: 0;
}
.terminal-container {
    height: calc(100vh - 4rem);
    background-color: #000;
    padding: 1rem;
}
#terminal {
    height: 100%;
    width: 100%;
}
.connection-error {
    color: #ff6b6b;
    padding: 1rem;
    background-color: #2d2d2d;
    border-radius: 4px;
    margin: 1rem;
}
EOF

# Update index.html to use external files
cat <<'EOF' > "$NOSANA_DIR/index.html"
<!DOCTYPE html>
<html>
<head>
    <title>Nosana Terminal</title>
    <meta charset="utf-8">
    <link href="../base1/cockpit.css" type="text/css" rel="stylesheet">
    <link href="terminal.css" type="text/css" rel="stylesheet">
    <script src="../base1/cockpit.js"></script>
    <script src="terminal.js"></script>
</head>
<body>
    <div class="pf-c-page">
        <main class="pf-c-page__main" tabindex="-1">
            <section class="pf-c-page__main-section pf-m-light">
                <div class="pf-c-content">
                    <h1>Nosana Terminal</h1>
                    <p>Connected to nosana-host tmux session</p>
                </div>
            </section>
            <section class="pf-c-page__main-section">
                <div class="terminal-container">
                    <div id="terminal"></div>
                    <div id="error-container"></div>
                </div>
            </section>
        </main>
    </div>
</body>
</html>
EOF

# Set permissions
chown -R root:root "$NOSANA_DIR"
chmod -R 755 "$NOSANA_DIR"

# Restart Cockpit
systemctl restart cockpit.socket cockpit

echo ""
echo "Fixes applied!"
echo ""
echo "1. TTY3 will now automatically logout after Ctrl+q detach"
echo "2. Cockpit module updated to avoid CSP errors"
echo ""
echo "To test:"
echo "- Press Ctrl+Alt+F3 and login - you should auto-attach to tmux"
echo "- Press Ctrl+q - you should be logged out and see login prompt"
echo "- Clear browser cache and try Cockpit again at https://192.168.0.100:9090"
echo ""
Save this as fix-nosana-issues.sh, make it executable with chmod +x fix-nosana-issues.sh, and run it with sudo ./fix-nosana-issues.sh.

god dammit, didn't you update the main script? that's the only script we're working with.. no fix scripts.
You're absolutely right! Let me update the main script to version 0.00.18 with all the fixes incorporated:

#!/bin/bash

# Version number - this is the first thing printed when the script runs
VERSION="0.00.18"
TIMESTAMP=$(date '+%H:%M:%S %d%b%y' | tr '[:lower:]' '[:upper:]')
echo "Nosana Frontend Install Script - Version: $VERSION - Timestamp: $TIMESTAMP"

# Exit on error
set -e

# Check if running as root
if [ "$EUID" -ne 0 ]; then
  echo "Please run as root (sudo)."
  exit 1
fi

# Cleanup at start for idempotency
systemctl stop nosana-host.service 2>/dev/null || true
tmux kill-session -t nosana-host 2>/dev/null || true
echo "Initial cleanup completed."

# Use existing $USER for everything (detect dynamically)
NOSANA_USER=${SUDO_USER:-$(whoami)}
echo "Using existing user: $NOSANA_USER for Nosana operations."

# Update packages
apt update

# Install required packages individually if not present
if ! command -v tmux >/dev/null; then
  apt install -y tmux
  echo "tmux installed."
else
  echo "tmux already installed, skipping."
fi

if ! command -v wget >/dev/null; then
  apt install -y wget
  echo "wget installed."
else
  echo "wget already installed, skipping."
fi

if ! command -v curl >/dev/null; then
  apt install -y curl
  echo "curl installed."
else
  echo "curl already installed, skipping."
fi

if ! command -v docker >/dev/null; then
  apt install -y docker.io
  echo "docker.io installed."
else
  echo "Docker already installed (detected via command -v docker), skipping docker.io installation to avoid conflicts."
fi

# Ensure Docker is running and add $NOSANA_USER to docker group if not already
systemctl enable --now docker
if ! groups $NOSANA_USER | grep -q docker; then
  usermod -aG docker $NOSANA_USER
  echo "Added $NOSANA_USER to docker group (may require logout/reboot for effect)."
fi

# Check for Nosana config; warn if initial setup needed
if [ ! -f "/home/$NOSANA_USER/.nosana/nosana_key.json" ]; then
  echo "Warning: Nosana not configured yet. Run 'bash <(wget -qO- https://nosana.com/start.sh)' interactively once to set up (email, terms, benchmark). Then restart the service."
fi

# Create systemd service for Nosana host
cat <<EOF > /etc/systemd/system/nosana-host.service
[Unit]
Description=Nosana Host Service
After=docker.service
Requires=docker.service

[Service]
User=$NOSANA_USER
ExecStart=/bin/bash -c 'tmux new-session -d -s nosana-host "bash <(wget -qO- https://nosana.com/start.sh)" ; while tmux has-session -t nosana-host 2>/dev/null; do sleep 1; done'
ExecStop=/bin/bash -c 'tmux kill-session -t nosana-host 2>/dev/null'
Restart=on-failure
KillMode=process
RestartSec=5s

[Install]
WantedBy=multi-user.target
EOF

# Reload systemd and enable service
systemctl daemon-reload
systemctl enable nosana-host.service
# Start the service (simulates boot behavior without reboot)
systemctl start nosana-host.service
echo "Nosana host service created and started."

# Configure tmux to be minimal/invisible with red bold status bar instructions
sudo -u $NOSANA_USER bash -c 'cat <<EOF > ~/.tmux.conf
set -g status on
set -g status-style bg=black,fg=red,bold
set -g status-left ""
set -g status-right "Detach: Ctrl+q or Ctrl+b d | Then 'exit' to logout"
set -g mouse on  # Optional: for easier scrolling if needed
set -g history-limit 10000
bind-key -n C-q detach-client
EOF'
tmux kill-session -t nosana-host 2>/dev/null || true
systemctl start nosana-host.service
tmux source-file /home/$NOSANA_USER/.tmux.conf 2>/dev/null || true
echo "tmux configured for minimal UI with red bold status bar instructions, Ctrl+q for detach. Config sourced and session restarted."

# Set up TTY3 auto-attach via .bashrc (for interactive shells) with auto-logout
BASH_RC="/home/$NOSANA_USER/.bashrc"
# Remove any existing TTY3 configuration
sed -i '/if \[ "$(tty)" = "\/dev\/tty3" \]; then/,/fi/d' "$BASH_RC" 2>/dev/null || true
# Add new configuration with auto-logout after detach
cat <<'EOF' >> "$BASH_RC"
if [ "$(tty)" = "/dev/tty3" ]; then
  echo "Attached to Nosana host tmux session. Instructions in status bar below."
  tmux attach-session -t nosana-host 2>/dev/null
  # If tmux exits (detached or session ended), logout immediately
  exit
fi
EOF
chown $NOSANA_USER:$NOSANA_USER "$BASH_RC"
echo "Added TTY3 auto-attach with auto-logout to .bashrc."

# Remove old getty override if exists
rm -rf /etc/systemd/system/getty@tty3.service.d
systemctl daemon-reload

# Set KillUserProcesses=no for safety (to keep tmux running after logout)
LOGIND_CONF="/etc/systemd/logind.conf"
if grep -q "^KillUserProcesses=yes" "$LOGIND_CONF" 2>/dev/null || ! grep -q "^KillUserProcesses=" "$LOGIND_CONF" 2>/dev/null; then
  sed -i 's/^KillUserProcesses=yes/KillUserProcesses=no/' "$LOGIND_CONF" 2>/dev/null || echo "KillUserProcesses=no" >> "$LOGIND_CONF"
  systemctl restart systemd-logind
  echo "Set KillUserProcesses=no in logind.conf for tmux persistence after logout."
else
  echo "KillUserProcesses already set to no; skipping."
fi

# Make TTY3 default login prompt on boot
cat <<'EOF' > /etc/systemd/system/switch-to-tty3.service
[Unit]
Description=Switch to TTY3 on boot
After=multi-user.target

[Service]
Type=oneshot
ExecStart=/usr/bin/chvt 3
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
systemctl enable switch-to-tty3.service
echo "Created service to switch to TTY3 on boot."

# Add custom persistent terminal to Cockpit
# Remove any old directories first
rm -rf /usr/share/cockpit/nosana-terminal 2>/dev/null || true
rm -rf /usr/share/cockpit/nosana 2>/dev/null || true

# Create the directory with the correct name that Cockpit expects
NOSANA_DIR="/usr/share/cockpit/nosana"
mkdir -p "$NOSANA_DIR"

# Create manifest.json
cat <<EOF > "$NOSANA_DIR/manifest.json"
{
    "version": 0,
    "menu": {
        "index": {
            "label": "Nosana Terminal",
            "order": 100,
            "docs": [
                {
                    "label": "Nosana Terminal",
                    "url": "index"
                }
            ]
        }
    }
}
EOF

# Create the JavaScript file separately to avoid CSP issues
cat <<'EOF' > "$NOSANA_DIR/terminal.js"
// Wait for Cockpit to be ready
cockpit.transport.wait(function() {
    console.log("Cockpit ready, initializing Nosana terminal...");
    
    const terminalElement = document.getElementById('terminal');
    const errorContainer = document.getElementById('error-container');
    
    try {
        // Create terminal
        const term = cockpit.terminal(terminalElement, {
            rows: 30,
            cols: 80
        });
        
        // Spawn tmux attach command
        const proc = cockpit.spawn(
            ["tmux", "attach-session", "-t", "nosana-host"],
            {
                pty: true,
                environ: ["TERM=xterm-256color"],
                err: "out"
            }
        );
        
        // Handle data stream
        proc.stream(function(data) {
            term.write(data);
        });
        
        // Handle input
        term.onData(function(data) {
            proc.input(data);
        });
        
        // Handle process completion
        proc.done(function() {
            console.log("Terminal session ended");
            term.write("\r\n\r\n[Session ended - refresh to reconnect]\r\n");
        });
        
        // Handle errors
        proc.fail(function(ex) {
            console.error("Terminal error:", ex);
            errorContainer.innerHTML = '<div class="connection-error">Failed to connect to nosana-host session: ' + ex.message + '</div>';
            
            // Try to create session if it doesn't exist
            errorContainer.innerHTML += '<p>Attempting to restart nosana-host service...</p>';
            cockpit.spawn(["systemctl", "restart", "nosana-host.service"], { superuser: "try" })
                .done(function() {
                    setTimeout(function() {
                        location.reload();
                    }, 3000);
                    errorContainer.innerHTML += '<p>Service restarted. Reloading page in 3 seconds...</p>';
                })
                .fail(function(err) {
                    errorContainer.innerHTML += '<p>Failed to restart service: ' + err.message + '</p>';
                });
        });
        
    } catch (e) {
        console.error("Failed to initialize terminal:", e);
        errorContainer.innerHTML = '<div class="connection-error">Failed to initialize terminal: ' + e.message + '</div>';
    }
});
EOF

# Create the CSS file separately to avoid CSP issues
cat <<'EOF' > "$NOSANA_DIR/terminal.css"
body {
    margin: 0;
    padding: 0;
}
.terminal-container {
    height: calc(100vh - 4rem);
    background-color: #000;
    padding: 1rem;
}
#terminal {
    height: 100%;
    width: 100%;
}
.connection-error {
    color: #ff6b6b;
    padding: 1rem;
    background-color: #2d2d2d;
    border-radius: 4px;
    margin: 1rem;
}
EOF

# Create index.html that uses external files
cat <<'EOF' > "$NOSANA_DIR/index.html"
<!DOCTYPE html>
<html>
<head>
    <title>Nosana Terminal</title>
    <meta charset="utf-8">
    <link href="../base1/cockpit.css" type="text/css" rel="stylesheet">
    <link href="terminal.css" type="text/css" rel="stylesheet">
    <script src="../base1/cockpit.js"></script>
    <script src="terminal.js"></script>
</head>
<body>
    <div class="pf-c-page">
        <main class="pf-c-page__main" tabindex="-1">
            <section class="pf-c-page__main-section pf-m-light">
                <div class="pf-c-content">
                    <h1>Nosana Terminal</h1>
                    <p>Connected to nosana-host tmux session</p>
                </div>
            </section>
            <section class="pf-c-page__main-section">
                <div class="terminal-container">
                    <div id="terminal"></div>
                    <div id="error-container"></div>
                </div>
            </section>
        </main>
    </div>
</body>
</html>
EOF

# Create tools.html that redirects to index (Cockpit is looking for this)
cat <<'EOF' > "$NOSANA_DIR/tools.html"
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="refresh" content="0; url=index.html">
</head>
<body>
    <p>Redirecting to Nosana Terminal...</p>
</body>
</html>
EOF

# Set proper permissions
chown -R root:root "$NOSANA_DIR"
chmod -R 755 "$NOSANA_DIR"

echo "Custom Nosana Terminal files created in correct location (/usr/share/cockpit/nosana/)."

# Restart Cockpit to load the new module
systemctl restart cockpit.socket cockpit
echo "Cockpit restarted to load Nosana Terminal module."

# Final instructions
echo ""
echo "============================================"
echo "Installation complete! (v$VERSION)"
echo "============================================"
echo ""
echo "To verify installation:"
echo "1. Check service status: systemctl status nosana-host"
echo "2. Check tmux session: tmux ls"
echo "3. Access Cockpit: https://192.168.0.100:9090"
echo "   - Clear browser cache (Ctrl+Shift+Delete)"
echo "   - Look for 'Nosana Terminal' in the menu"
echo ""
echo "TTY3 Features:"
echo "- Automatically switches to TTY3 on boot"
echo "- Login automatically attaches to Nosana tmux session"
echo "- Ctrl+q detaches AND logs out (returns to login prompt)"
echo ""
echo "To test TTY3:"
echo "- Press Ctrl+Alt+F3 to switch to TTY3"
echo "- Login with your credentials"
echo "- You'll automatically attach to the Nosana tmux session"
echo "- Press Ctrl+q to detach and logout"
echo ""
echo "Troubleshooting commands:"
echo "  sudo journalctl -u nosana-host -f"
echo "  sudo journalctl -u cockpit -f"
echo "  sudo ls -la /usr/share/cockpit/nosana/"
echo ""
This is version 0.00.18 with all fixes integrated:

TTY3 auto-logout after Ctrl+q detach
Cockpit module with external CSS/JS files to avoid CSP errors
All previous functionality maintained
md@nn06:~$ > addtmux-and-sysd.sh && chmod +x addtmux-and-sysd.sh && nano addtmux-and-sysd.sh && cat addtmux-and-sysd.sh &&sudo ./addtmux-and-sysd.sh
#!/bin/bash

# Version number - this is the first thing printed when the script runs
VERSION="0.00.18"
TIMESTAMP=$(date '+%H:%M:%S %d%b%y' | tr '[:lower:]' '[:upper:]')
echo "Nosana Frontend Install Script - Version: $VERSION - Timestamp: $TIMESTAMP"

# Exit on error
set -e

# Check if running as root
if [ "$EUID" -ne 0 ]; then
  echo "Please run as root (sudo)."
  exit 1
fi

# Cleanup at start for idempotency
systemctl stop nosana-host.service 2>/dev/null || true
tmux kill-session -t nosana-host 2>/dev/null || true
echo "Initial cleanup completed."

# Use existing $USER for everything (detect dynamically)
NOSANA_USER=${SUDO_USER:-$(whoami)}
echo "Using existing user: $NOSANA_USER for Nosana operations."

# Update packages
apt update

# Install required packages individually if not present
if ! command -v tmux >/dev/null; then
  apt install -y tmux
  echo "tmux installed."
else
  echo "tmux already installed, skipping."
fi

if ! command -v wget >/dev/null; then
  apt install -y wget
  echo "wget installed."
else
  echo "wget already installed, skipping."
fi

if ! command -v curl >/dev/null; then
  apt install -y curl
  echo "curl installed."
else
  echo "curl already installed, skipping."
fi

if ! command -v docker >/dev/null; then
  apt install -y docker.io
  echo "docker.io installed."
else
  echo "Docker already installed (detected via command -v docker), skipping docker.io installation to avoid conflicts."
fi

# Ensure Docker is running and add $NOSANA_USER to docker group if not already
systemctl enable --now docker
if ! groups $NOSANA_USER | grep -q docker; then
  usermod -aG docker $NOSANA_USER
  echo "Added $NOSANA_USER to docker group (may require logout/reboot for effect)."
fi

# Check for Nosana config; warn if initial setup needed
if [ ! -f "/home/$NOSANA_USER/.nosana/nosana_key.json" ]; then
  echo "Warning: Nosana not configured yet. Run 'bash <(wget -qO- https://nosana.com/start.sh)' interactively once to set up (email, terms, benchmark). Then restart the service."
fi

# Create systemd service for Nosana host
cat <<EOF > /etc/systemd/system/nosana-host.service
[Unit]
Description=Nosana Host Service
After=docker.service
Requires=docker.service

[Service]
User=$NOSANA_USER
ExecStart=/bin/bash -c 'tmux new-session -d -s nosana-host "bash <(wget -qO- https://nosana.com/start.sh)" ; while tmux has-session -t nosana-host 2>/dev/null; do sleep 1; done'
ExecStop=/bin/bash -c 'tmux kill-session -t nosana-host 2>/dev/null'
Restart=on-failure
KillMode=process
RestartSec=5s

[Install]
WantedBy=multi-user.target
EOF

# Reload systemd and enable service
systemctl daemon-reload
systemctl enable nosana-host.service
# Start the service (simulates boot behavior without reboot)
systemctl start nosana-host.service
echo "Nosana host service created and started."

# Configure tmux to be minimal/invisible with red bold status bar instructions
sudo -u $NOSANA_USER bash -c 'cat <<EOF > ~/.tmux.conf
set -g status on
set -g status-style bg=black,fg=red,bold
set -g status-left ""
set -g status-right "Detach: Ctrl+q or Ctrl+b d | Then 'exit' to logout"
set -g mouse on  # Optional: for easier scrolling if needed
set -g history-limit 10000
bind-key -n C-q detach-client
EOF'
tmux kill-session -t nosana-host 2>/dev/null || true
systemctl start nosana-host.service
tmux source-file /home/$NOSANA_USER/.tmux.conf 2>/dev/null || true
echo "tmux configured for minimal UI with red bold status bar instructions, Ctrl+q for detach. Config sourced and session restarted."

# Set up TTY3 auto-attach via .bashrc (for interactive shells) with auto-logout
BASH_RC="/home/$NOSANA_USER/.bashrc"
# Remove any existing TTY3 configuration
sed -i '/if \[ "$(tty)" = "\/dev\/tty3" \]; then/,/fi/d' "$BASH_RC" 2>/dev/null || true
# Add new configuration with auto-logout after detach
cat <<'EOF' >> "$BASH_RC"
if [ "$(tty)" = "/dev/tty3" ]; then
  echo "Attached to Nosana host tmux session. Instructions in status bar below."
  tmux attach-session -t nosana-host 2>/dev/null
  # If tmux exits (detached or session ended), logout immediately
  exit
fi
EOF
chown $NOSANA_USER:$NOSANA_USER "$BASH_RC"
echo "Added TTY3 auto-attach with auto-logout to .bashrc."

# Remove old getty override if exists
rm -rf /etc/systemd/system/getty@tty3.service.d
systemctl daemon-reload

# Set KillUserProcesses=no for safety (to keep tmux running after logout)
LOGIND_CONF="/etc/systemd/logind.conf"
if grep -q "^KillUserProcesses=yes" "$LOGIND_CONF" 2>/dev/null || ! grep -q "^KillUserProcesses=" "$LOGIND_CONF" 2>/dev/null; then
  sed -i 's/^KillUserProcesses=yes/KillUserProcesses=no/' "$LOGIND_CONF" 2>/dev/null || echo "KillUserProcesses=no" >> "$LOGIND_CONF"
  systemctl restart systemd-logind
  echo "Set KillUserProcesses=no in logind.conf for tmux persistence after logout."
else
  echo "KillUserProcesses already set to no; skipping."
fi

# Make TTY3 default login prompt on boot
cat <<'EOF' > /etc/systemd/system/switch-to-tty3.service
[Unit]
Description=Switch to TTY3 on boot
After=multi-user.target

[Service]
Type=oneshot
ExecStart=/usr/bin/chvt 3
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
systemctl enable switch-to-tty3.service
echo "Created service to switch to TTY3 on boot."

# Add custom persistent terminal to Cockpit
# Remove any old directories first
rm -rf /usr/share/cockpit/nosana-terminal 2>/dev/null || true
rm -rf /usr/share/cockpit/nosana 2>/dev/null || true

# Create the directory with the correct name that Cockpit expects
NOSANA_DIR="/usr/share/cockpit/nosana"
mkdir -p "$NOSANA_DIR"

# Create manifest.json
cat <<EOF > "$NOSANA_DIR/manifest.json"
{
    "version": 0,
    "menu": {
        "index": {
            "label": "Nosana Terminal",
            "order": 100,
            "docs": [
                {
                    "label": "Nosana Terminal",
                    "url": "index"
                }
            ]
        }
    }
}
EOF

# Create the JavaScript file separately to avoid CSP issues
cat <<'EOF' > "$NOSANA_DIR/terminal.js"
// Wait for Cockpit to be ready
cockpit.transport.wait(function() {
    console.log("Cockpit ready, initializing Nosana terminal...");
    
    const terminalElement = document.getElementById('terminal');
    const errorContainer = document.getElementById('error-container');
    
    try {
        // Create terminal
        const term = cockpit.terminal(terminalElement, {
            rows: 30,
            cols: 80
        });
        
        // Spawn tmux attach command
        const proc = cockpit.spawn(
            ["tmux", "attach-session", "-t", "nosana-host"],
            {
                pty: true,
                environ: ["TERM=xterm-256color"],
                err: "out"
            }
        );
        
        // Handle data stream
        proc.stream(function(data) {
            term.write(data);
        });
        
        // Handle input
        term.onData(function(data) {
            proc.input(data);
        });
        
        // Handle process completion
        proc.done(function() {
            console.log("Terminal session ended");
            term.write("\r\n\r\n[Session ended - refresh to reconnect]\r\n");
        });
        
        // Handle errors
        proc.fail(function(ex) {
            console.error("Terminal error:", ex);
            errorContainer.innerHTML = '<div class="connection-error">Failed to connect to nosana-host session: ' + ex.message + '</div>';
            
            // Try to create session if it doesn't exist
            errorContainer.innerHTML += '<p>Attempting to restart nosana-host service...</p>';
            cockpit.spawn(["systemctl", "restart", "nosana-host.service"], { superuser: "try" })
                .done(function() {
                    setTimeout(function() {
                        location.reload();
                    }, 3000);
                    errorContainer.innerHTML += '<p>Service restarted. Reloading page in 3 seconds...</p>';
                })
                .fail(function(err) {
                    errorContainer.innerHTML += '<p>Failed to restart service: ' + err.message + '</p>';
                });
        });
        
    } catch (e) {
        console.error("Failed to initialize terminal:", e);
        errorContainer.innerHTML = '<div class="connection-error">Failed to initialize terminal: ' + e.message + '</div>';
    }
});
EOF

# Create the CSS file separately to avoid CSP issues
cat <<'EOF' > "$NOSANA_DIR/terminal.css"
body {
    margin: 0;
    padding: 0;
}
.terminal-container {
    height: calc(100vh - 4rem);
    background-color: #000;
    padding: 1rem;
}
#terminal {
    height: 100%;
    width: 100%;
}
.connection-error {
    color: #ff6b6b;
    padding: 1rem;
    background-color: #2d2d2d;
    border-radius: 4px;
    margin: 1rem;
}
EOF

# Create index.html that uses external files
cat <<'EOF' > "$NOSANA_DIR/index.html"
<!DOCTYPE html>
<html>
<head>
    <title>Nosana Terminal</title>
    <meta charset="utf-8">
    <link href="../base1/cockpit.css" type="text/css" rel="stylesheet">
    <link href="terminal.css" type="text/css" rel="stylesheet">
    <script src="../base1/cockpit.js"></script>
    <script src="terminal.js"></script>
</head>
<body>
    <div class="pf-c-page">
        <main class="pf-c-page__main" tabindex="-1">
            <section class="pf-c-page__main-section pf-m-light">
                <div class="pf-c-content">
                    <h1>Nosana Terminal</h1>
                    <p>Connected to nosana-host tmux session</p>
                </div>
            </section>
            <section class="pf-c-page__main-section">
                <div class="terminal-container">
                    <div id="terminal"></div>
                    <div id="error-container"></div>
                </div>
            </section>
        </main>
    </div>
</body>
</html>
EOF

# Create tools.html that redirects to index (Cockpit is looking for this)
cat <<'EOF' > "$NOSANA_DIR/tools.html"
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="refresh" content="0; url=index.html">
</head>
<body>
    <p>Redirecting to Nosana Terminal...</p>
</body>
</html>
EOF

# Set proper permissions
chown -R root:root "$NOSANA_DIR"
chmod -R 755 "$NOSANA_DIR"

echo "Custom Nosana Terminal files created in correct location (/usr/share/cockpit/nosana/)."

# Restart Cockpit to load the new module
systemctl restart cockpit.socket cockpit
echo "Cockpit restarted to load Nosana Terminal module."

# Final instructions
echo ""
echo "============================================"
echo "Installation complete! (v$VERSION)"
echo "============================================"
echo ""
echo "To verify installation:"
echo "1. Check service status: systemctl status nosana-host"
echo "2. Check tmux session: tmux ls"
echo "3. Access Cockpit: https://192.168.0.100:9090"
echo "   - Clear browser cache (Ctrl+Shift+Delete)"
echo "   - Look for 'Nosana Terminal' in the menu"
echo ""
echo "TTY3 Features:"
echo "- Automatically switches to TTY3 on boot"
echo "- Login automatically attaches to Nosana tmux session"
echo "- Ctrl+q detaches AND logs out (returns to login prompt)"
echo ""
echo "To test TTY3:"
echo "- Press Ctrl+Alt+F3 to switch to TTY3"
echo "- Login with your credentials"
echo "- You'll automatically attach to the Nosana tmux session"
echo "- Press Ctrl+q to detach and logout"
echo ""
echo "Troubleshooting commands:"
echo "  sudo journalctl -u nosana-host -f"
echo "  sudo journalctl -u cockpit -f"
echo "  sudo ls -la /usr/share/cockpit/nosana/"
echo ""
Nosana Frontend Install Script - Version: 0.00.18 - Timestamp: 17:51:23 28JUL25
Initial cleanup completed.
Using existing user: md for Nosana operations.
Hit:1 https://download.docker.com/linux/ubuntu noble InRelease
Hit:2 http://us.archive.ubuntu.com/ubuntu noble InRelease                                                                                                                     
Hit:3 https://nvidia.github.io/libnvidia-container/stable/deb/amd64  InRelease                                                                                                
Hit:4 http://us.archive.ubuntu.com/ubuntu noble-updates InRelease                                                                                            
Hit:5 http://us.archive.ubuntu.com/ubuntu noble-backports InRelease                                                                    
Get:6 http://security.ubuntu.com/ubuntu noble-security InRelease [126 kB]                              
Hit:7 https://ppa.launchpadcontent.net/graphics-drivers/ppa/ubuntu noble InRelease        
Get:8 http://security.ubuntu.com/ubuntu noble-security/main amd64 Packages [1023 kB]
Get:9 http://security.ubuntu.com/ubuntu noble-security/main amd64 Components [21.5 kB]
Get:10 http://security.ubuntu.com/ubuntu noble-security/restricted amd64 Components [212 B]
Get:11 http://security.ubuntu.com/ubuntu noble-security/universe amd64 Packages [876 kB]
Get:12 http://security.ubuntu.com/ubuntu noble-security/universe amd64 Components [52.3 kB]
Get:13 http://security.ubuntu.com/ubuntu noble-security/multiverse amd64 Components [212 B]
Fetched 2100 kB in 1s (1449 kB/s)                                 
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
2 packages can be upgraded. Run 'apt list --upgradable' to see them.
tmux already installed, skipping.
wget already installed, skipping.
curl already installed, skipping.
Docker already installed (detected via command -v docker), skipping docker.io installation to avoid conflicts.
Synchronizing state of docker.service with SysV service script with /usr/lib/systemd/systemd-sysv-install.
Executing: /usr/lib/systemd/systemd-sysv-install enable docker
Nosana host service created and started.
tmux configured for minimal UI with red bold status bar instructions, Ctrl+q for detach. Config sourced and session restarted.
Added TTY3 auto-attach with auto-logout to .bashrc.
Set KillUserProcesses=no in logind.conf for tmux persistence after logout.
Created service to switch to TTY3 on boot.
Custom Nosana Terminal files created in correct location (/usr/share/cockpit/nosana/).
Cockpit restarted to load Nosana Terminal module.

============================================
Installation complete! (v0.00.18)
============================================

To verify installation:
1. Check service status: systemctl status nosana-host
2. Check tmux session: tmux ls
3. Access Cockpit: https://192.168.0.100:9090
   - Clear browser cache (Ctrl+Shift+Delete)
   - Look for 'Nosana Terminal' in the menu

TTY3 Features:
- Automatically switches to TTY3 on boot
- Login automatically attaches to Nosana tmux session
- Ctrl+q detaches AND logs out (returns to login prompt)

To test TTY3:
- Press Ctrl+Alt+F3 to switch to TTY3
- Login with your credentials
- You'll automatically attach to the Nosana tmux session
- Press Ctrl+q to detach and logout

Troubleshooting commands:
  sudo journalctl -u nosana-host -f
  sudo journalctl -u cockpit -f
  sudo ls -la /usr/share/cockpit/nosana/

md@nn06:~$ sudo reboot


ctrl-q in tmux is not taking me to login prompt.. it only detaches from tmux.

Nosana Terminal:
Nosana Terminal
Connected to nosana-host tmux session

Failed to initialize terminal: cockpit.terminal is not a function


i had to scroll to find that line: Failed to initialize terminal: cockpit.terminal is not a function
that line may have been there during the other failures.

:9090/cockpit/@localhost/nosana/index.html#/:1 Refused to apply style from 'https://192.168.0.100:9090/cockpit/@localhost/base1/cockpit.css' because its MIME type ('text/html') is not a supported stylesheet MIME type, and strict MIME checking is enabled.Understand this error
terminal.js:3 Cockpit ready, initializing Nosana terminal...
terminal.js:61 Failed to initialize terminal: TypeError: cockpit.terminal is not a function
    at terminal.js:10:30
    at pn.<anonymous> (cockpit.js:5:399)
    at Pe (cockpit.js:1:779)
    at pn.value (cockpit.js:1:3002)
    at V (cockpit.js:3:313)
    at ce (cockpit.js:4:1059)
    at re (cockpit.js:4:1116)
    at w.onmessage.o.dispatch_data [as onmessage] (cockpit.js:4:480)
    at cockpit.js:1:4299


GPU Monitor seems to have moving numbers, but the green lines (the guages) do not represent the number. The green lines are 100% all the time.
NVIDIA GPU Monitor
 Auto-refreshing every second
NVIDIA GeForce RTX 4090 (GPU 0)
Driver: 575.64.03
PCIe: Gen 4 x16
Temperature: 36°C
GPU Usage: 0%
Memory: 22.86 GB / 23.99 GB (95.3%)
Power: 29.0W / 480.0W (6.0%)
Fan Speed: 0%
Clocks: GPU: 210 MHz, Mem: 405 MHz
Processes:
PID 5976: 22908 MB
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-1QrR+CMbqUmIEqMmkf2q8auDgrj9usUojwa7JhgaruU='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-mLUZX2M+5ek9U1PJXD0favo93vixRvAsYlhVyNwbrBc='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-1QrR+CMbqUmIEqMmkf2q8auDgrj9usUojwa7JhgaruU='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-gLrHk2B/a2i4ZruNFp0KojzcmyoitGHR3uA0YAAzdMI='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-1QrR+CMbqUmIEqMmkf2q8auDgrj9usUojwa7JhgaruU='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-mLUZX2M+5ek9U1PJXD0favo93vixRvAsYlhVyNwbrBc='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.
I see three main issues:

Ctrl+q logout issue - It's only detaching from tmux, not logging out
Nosana Terminal error - cockpit.terminal is not a function
GPU Monitor CSP errors - Inline styles being blocked
Let me fix all three issues in the main script. Here's version 0.00.19:

#!/bin/bash

# Version number - this is the first thing printed when the script runs
VERSION="0.00.19"
TIMESTAMP=$(date '+%H:%M:%S %d%b%y' | tr '[:lower:]' '[:upper:]')
echo "Nosana Frontend Install Script - Version: $VERSION - Timestamp: $TIMESTAMP"

# Exit on error
set -e

# Check if running as root
if [ "$EUID" -ne 0 ]; then
  echo "Please run as root (sudo)."
  exit 1
fi

# Cleanup at start for idempotency
systemctl stop nosana-host.service 2>/dev/null || true
tmux kill-session -t nosana-host 2>/dev/null || true
echo "Initial cleanup completed."

# Use existing $USER for everything (detect dynamically)
NOSANA_USER=${SUDO_USER:-$(whoami)}
echo "Using existing user: $NOSANA_USER for Nosana operations."

# Update packages
apt update

# Install required packages individually if not present
if ! command -v tmux >/dev/null; then
  apt install -y tmux
  echo "tmux installed."
else
  echo "tmux already installed, skipping."
fi

if ! command -v wget >/dev/null; then
  apt install -y wget
  echo "wget installed."
else
  echo "wget already installed, skipping."
fi

if ! command -v curl >/dev/null; then
  apt install -y curl
  echo "curl installed."
else
  echo "curl already installed, skipping."
fi

if ! command -v docker >/dev/null; then
  apt install -y docker.io
  echo "docker.io installed."
else
  echo "Docker already installed (detected via command -v docker), skipping docker.io installation to avoid conflicts."
fi

# Ensure Docker is running and add $NOSANA_USER to docker group if not already
systemctl enable --now docker
if ! groups $NOSANA_USER | grep -q docker; then
  usermod -aG docker $NOSANA_USER
  echo "Added $NOSANA_USER to docker group (may require logout/reboot for effect)."
fi

# Check for Nosana config; warn if initial setup needed
if [ ! -f "/home/$NOSANA_USER/.nosana/nosana_key.json" ]; then
  echo "Warning: Nosana not configured yet. Run 'bash <(wget -qO- https://nosana.com/start.sh)' interactively once to set up (email, terms, benchmark). Then restart the service."
fi

# Create systemd service for Nosana host
cat <<EOF > /etc/systemd/system/nosana-host.service
[Unit]
Description=Nosana Host Service
After=docker.service
Requires=docker.service

[Service]
User=$NOSANA_USER
ExecStart=/bin/bash -c 'tmux new-session -d -s nosana-host "bash <(wget -qO- https://nosana.com/start.sh)" ; while tmux has-session -t nosana-host 2>/dev/null; do sleep 1; done'
ExecStop=/bin/bash -c 'tmux kill-session -t nosana-host 2>/dev/null'
Restart=on-failure
KillMode=process
RestartSec=5s

[Install]
WantedBy=multi-user.target
EOF

# Reload systemd and enable service
systemctl daemon-reload
systemctl enable nosana-host.service
# Start the service (simulates boot behavior without reboot)
systemctl start nosana-host.service
echo "Nosana host service created and started."

# Configure tmux to be minimal/invisible with red bold status bar instructions
sudo -u $NOSANA_USER bash -c 'cat <<EOF > ~/.tmux.conf
set -g status on
set -g status-style bg=black,fg=red,bold
set -g status-left ""
set -g status-right "Detach: Ctrl+q or Ctrl+b d | Then 'exit' to logout"
set -g mouse on  # Optional: for easier scrolling if needed
set -g history-limit 10000
bind-key -n C-q detach-client
EOF'
tmux kill-session -t nosana-host 2>/dev/null || true
systemctl start nosana-host.service
tmux source-file /home/$NOSANA_USER/.tmux.conf 2>/dev/null || true
echo "tmux configured for minimal UI with red bold status bar instructions, Ctrl+q for detach. Config sourced and session restarted."

# Fix 1: Set up TTY3 auto-attach with proper logout handling
BASH_RC="/home/$NOSANA_USER/.bashrc"
# Remove any existing TTY3 configuration
sed -i '/if \[ "$(tty)" = "\/dev\/tty3" \]; then/,/fi/d' "$BASH_RC" 2>/dev/null || true

# Add new configuration that ensures logout after detach
cat <<'EOF' >> "$BASH_RC"
if [ "$(tty)" = "/dev/tty3" ]; then
  # Trap to ensure logout on any exit
  trap 'exit' INT TERM
  echo "Attached to Nosana host tmux session. Instructions in status bar below."
  tmux attach-session -t nosana-host 2>/dev/null || echo "No nosana-host session found."
  # Force logout after tmux exits for any reason
  logout
fi
EOF
chown $NOSANA_USER:$NOSANA_USER "$BASH_RC"
echo "Added TTY3 auto-attach with forced logout to .bashrc."

# Remove old getty override if exists
rm -rf /etc/systemd/system/getty@tty3.service.d
systemctl daemon-reload

# Set KillUserProcesses=no for safety (to keep tmux running after logout)
LOGIND_CONF="/etc/systemd/logind.conf"
if grep -q "^KillUserProcesses=yes" "$LOGIND_CONF" 2>/dev/null || ! grep -q "^KillUserProcesses=" "$LOGIND_CONF" 2>/dev/null; then
  sed -i 's/^KillUserProcesses=yes/KillUserProcesses=no/' "$LOGIND_CONF" 2>/dev/null || echo "KillUserProcesses=no" >> "$LOGIND_CONF"
  systemctl restart systemd-logind
  echo "Set KillUserProcesses=no in logind.conf for tmux persistence after logout."
else
  echo "KillUserProcesses already set to no; skipping."
fi

# Make TTY3 default login prompt on boot
cat <<'EOF' > /etc/systemd/system/switch-to-tty3.service
[Unit]
Description=Switch to TTY3 on boot
After=multi-user.target

[Service]
Type=oneshot
ExecStart=/usr/bin/chvt 3
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
systemctl enable switch-to-tty3.service
echo "Created service to switch to TTY3 on boot."

# Fix 2: Add custom persistent terminal to Cockpit with proper terminal support
# Remove any old directories first
rm -rf /usr/share/cockpit/nosana-terminal 2>/dev/null || true
rm -rf /usr/share/cockpit/nosana 2>/dev/null || true

# Create the directory with the correct name that Cockpit expects
NOSANA_DIR="/usr/share/cockpit/nosana"
mkdir -p "$NOSANA_DIR"

# Create manifest.json
cat <<EOF > "$NOSANA_DIR/manifest.json"
{
    "version": 0,
    "requires": {
        "cockpit": "186"
    },
    "menu": {
        "index": {
            "label": "Nosana Terminal",
            "order": 100,
            "docs": [
                {
                    "label": "Nosana Terminal",
                    "url": "index"
                }
            ]
        }
    }
}
EOF

# Create the JavaScript file with proper terminal initialization
cat <<'EOF' > "$NOSANA_DIR/terminal.js"
// Load required Cockpit modules
require([
    "base1/cockpit",
    "base1/terminal"
], function(cockpit, terminal) {
    // Wait for Cockpit to be ready
    cockpit.transport.wait(function() {
        console.log("Cockpit ready, initializing Nosana terminal...");
        
        const terminalElement = document.getElementById('terminal');
        const errorContainer = document.getElementById('error-container');
        
        try {
            // Create channel for terminal
            const channel = cockpit.channel({
                payload: "stream",
                spawn: ["tmux", "attach-session", "-t", "nosana-host"],
                pty: true,
                environ: ["TERM=xterm-256color"],
                err: "out"
            });
            
            // Initialize terminal
            if (terminal && terminal.Terminal) {
                const term = new terminal.Terminal(terminalElement);
                
                // Handle data from process
                channel.addEventListener("message", function (event, data) {
                    term.write(data);
                });
                
                // Handle input to process
                term.onData(function(data) {
                    channel.send(data);
                });
                
                // Handle channel close
                channel.addEventListener("close", function (event, options) {
                    console.log("Terminal session ended", options);
                    term.write("\r\n\r\n[Session ended - refresh to reconnect]\r\n");
                    
                    // Check if session still exists
                    cockpit.spawn(["tmux", "has-session", "-t", "nosana-host"], { err: "ignore" })
                        .fail(function() {
                            errorContainer.innerHTML = '<div class="connection-error">Session not found. Attempting to restart service...</div>';
                            cockpit.spawn(["systemctl", "restart", "nosana-host.service"], { superuser: "try" })
                                .done(function() {
                                    setTimeout(function() {
                                        location.reload();
                                    }, 3000);
                                    errorContainer.innerHTML += '<p>Service restarted. Reloading in 3 seconds...</p>';
                                });
                        });
                });
                
                // Start the channel
                channel.send(""); // Send empty string to start
                
            } else {
                throw new Error("Terminal module not loaded properly");
            }
            
        } catch (e) {
            console.error("Failed to initialize terminal:", e);
            errorContainer.innerHTML = '<div class="connection-error">Failed to initialize terminal: ' + e.message + '</div>';
            errorContainer.innerHTML += '<p>Make sure the nosana-host tmux session is running.</p>';
        }
    });
});
EOF

# Create the CSS file separately to avoid CSP issues
cat <<'EOF' > "$NOSANA_DIR/terminal.css"
body {
    margin: 0;
    padding: 0;
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
}
.pf-c-page__main {
    background-color: #151515;
}
.terminal-container {
    height: calc(100vh - 8rem);
    background-color: #000;
    padding: 1rem;
    position: relative;
}
#terminal {
    height: 100%;
    width: 100%;
}
#terminal .xterm {
    height: 100%;
}
.connection-error {
    color: #ff6b6b;
    padding: 1rem;
    background-color: #2d2d2d;
    border-radius: 4px;
    margin: 1rem;
}
.pf-c-content h1 {
    color: #fff;
}
.pf-c-content p {
    color: #d2d2d2;
}
EOF

# Create index.html that uses external files and loads terminal module
cat <<'EOF' > "$NOSANA_DIR/index.html"
<!DOCTYPE html>
<html>
<head>
    <title>Nosana Terminal</title>
    <meta charset="utf-8">
    <link href="../base1/cockpit.css" type="text/css" rel="stylesheet">
    <link href="terminal.css" type="text/css" rel="stylesheet">
    <script type="text/javascript" src="../base1/cockpit.js"></script>
    <script type="text/javascript" src="../base1/terminal.js"></script>
    <script type="text/javascript" src="terminal.js"></script>
</head>
<body>
    <div class="pf-c-page">
        <main class="pf-c-page__main" tabindex="-1">
            <section class="pf-c-page__main-section pf-m-light">
                <div class="pf-c-content">
                    <h1>Nosana Terminal</h1>
                    <p>Connected to nosana-host tmux session</p>
                </div>
            </section>
            <section class="pf-c-page__main-section">
                <div class="terminal-container">
                    <div id="terminal"></div>
                    <div id="error-container"></div>
                </div>
            </section>
        </main>
    </div>
</body>
</html>
EOF

# Create tools.html that redirects to index (Cockpit is looking for this)
cat <<'EOF' > "$NOSANA_DIR/tools.html"
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="refresh" content="0; url=index.html">
</head>
<body>
    <p>Redirecting to Nosana Terminal...</p>
</body>
</html>
EOF

# Set proper permissions
chown -R root:root "$NOSANA_DIR"
chmod -R 755 "$NOSANA_DIR"

echo "Custom Nosana Terminal files created with proper terminal support."

# Fix 3: Update GPU Monitor to use external CSS instead of inline styles
GPU_DIR="/usr/share/cockpit/gpu-monitor"
if [ -d "$GPU_DIR" ]; then
    echo "Fixing GPU Monitor CSP issues..."
    
    # Create external CSS file for GPU monitor
    cat <<'EOF' > "$GPU_DIR/gpu-monitor.css"
.progress {
    height: 20px;
    background-color: #e0e0e0;
    border-radius: 4px;
    overflow: hidden;
    margin: 5px 0;
}
.progress-bar {
    height: 100%;
    background-color: #4CAF50;
    transition: width 0.3s ease;
}
.gpu-metric {
    margin: 10px 0;
}
.gpu-metric label {
    font-weight: bold;
    display: block;
    margin-bottom: 5px;
}
EOF
    
    # Update the gpu-monitor.js to use CSS classes instead of inline styles
    if [ -f "$GPU_DIR/gpu-monitor.js" ]; then
        # Backup original
        cp "$GPU_DIR/gpu-monitor.js" "$GPU_DIR/gpu-monitor.js.bak"
        
        # Replace inline styles with classes
        sed -i 's/style="[^"]*"//g' "$GPU_DIR/gpu-monitor.js"
        sed -i 's/<div class="progress-bar"/<div class="progress-bar" data-value/g' "$GPU_DIR/gpu-monitor.js"
        
        echo "GPU Monitor updated to use external CSS."
    fi
    
    # Update index.html to include the CSS file
    if grep -q "gpu-monitor.css" "$GPU_DIR/index.html"; then
        echo "GPU Monitor CSS already linked."
    else
        sed -i '/<\/head>/i <link href="gpu-monitor.css" type="text/css" rel="stylesheet">' "$GPU_DIR/index.html"
        echo "Added GPU Monitor CSS link to index.html."
    fi
fi

# Restart Cockpit to load the new modules
systemctl restart cockpit.socket cockpit
echo "Cockpit restarted to load updated modules."

# Final instructions
echo ""
echo "============================================"
echo "Installation complete! (v$VERSION)"
echo "============================================"
echo ""
echo "FIXES APPLIED:"
echo "1. TTY3 logout: Now uses 'logout' command after tmux detach"
echo "2. Nosana Terminal: Fixed 'cockpit.terminal is not a function' error"
echo "3. GPU Monitor: Moved inline styles to external CSS file"
echo ""
echo "To verify installation:"
echo "1. Check service status: systemctl status nosana-host"
echo "2. Check tmux session: tmux ls"
echo "3. Access Cockpit: https://192.168.0.100:9090"
echo "   - Clear browser cache completely (Ctrl+Shift+Delete)"
echo "   - Look for 'Nosana Terminal' in the menu"
echo ""
echo "TTY3 Features:"
echo "- Automatically switches to TTY3 on boot"
echo "- Login automatically attaches to Nosana tmux session"
echo "- Ctrl+q detaches AND logs out (returns to login prompt)"
echo ""
echo "To test TTY3:"
echo "- Press Ctrl+Alt+F3 to switch to TTY3"
echo "- Login with your credentials"
echo "- You'll automatically attach to the Nosana tmux session"
echo "- Press Ctrl+q to detach and logout"
echo ""
echo "Troubleshooting commands:"
echo "  sudo journalctl -u nosana-host -f"
echo "  sudo journalctl -u cockpit -f"
echo "  sudo ls -la /usr/share/cockpit/nosana/"
echo ""
Key fixes in v0.00.19:

TTY3 Logout Fix: Changed from exit to logout command and added a trap to ensure logout happens
Nosana Terminal Fix:
Properly loads the terminal module using require()
Uses cockpit.channel() instead of the non-existent cockpit.terminal()
Creates a proper terminal instance using the loaded terminal module
GPU Monitor Fix: Added code to create external CSS file and remove inline styles (though this requires the GPU monitor to be written in a way that supports it)
Save this as your addtmux-and-sysd.sh and run it again. The terminal should now work properly in Cockpit!

md@nn06:~$ > addtmux-and-sysd.sh && chmod +x addtmux-and-sysd.sh && nano addtmux-and-sysd.sh && cat addtmux-and-sysd.sh &&sudo ./addtmux-and-sysd.sh
#!/bin/bash

# Version number - this is the first thing printed when the script runs
VERSION="0.00.19"
TIMESTAMP=$(date '+%H:%M:%S %d%b%y' | tr '[:lower:]' '[:upper:]')
echo "Nosana Frontend Install Script - Version: $VERSION - Timestamp: $TIMESTAMP"

# Exit on error
set -e

# Check if running as root
if [ "$EUID" -ne 0 ]; then
  echo "Please run as root (sudo)."
  exit 1
fi

# Cleanup at start for idempotency
systemctl stop nosana-host.service 2>/dev/null || true
tmux kill-session -t nosana-host 2>/dev/null || true
echo "Initial cleanup completed."

# Use existing $USER for everything (detect dynamically)
NOSANA_USER=${SUDO_USER:-$(whoami)}
echo "Using existing user: $NOSANA_USER for Nosana operations."

# Update packages
apt update

# Install required packages individually if not present
if ! command -v tmux >/dev/null; then
  apt install -y tmux
  echo "tmux installed."
else
  echo "tmux already installed, skipping."
fi

if ! command -v wget >/dev/null; then
  apt install -y wget
  echo "wget installed."
else
  echo "wget already installed, skipping."
fi

if ! command -v curl >/dev/null; then
  apt install -y curl
  echo "curl installed."
else
  echo "curl already installed, skipping."
fi

if ! command -v docker >/dev/null; then
  apt install -y docker.io
  echo "docker.io installed."
else
  echo "Docker already installed (detected via command -v docker), skipping docker.io installation to avoid conflicts."
fi

# Ensure Docker is running and add $NOSANA_USER to docker group if not already
systemctl enable --now docker
if ! groups $NOSANA_USER | grep -q docker; then
  usermod -aG docker $NOSANA_USER
  echo "Added $NOSANA_USER to docker group (may require logout/reboot for effect)."
fi

# Check for Nosana config; warn if initial setup needed
if [ ! -f "/home/$NOSANA_USER/.nosana/nosana_key.json" ]; then
  echo "Warning: Nosana not configured yet. Run 'bash <(wget -qO- https://nosana.com/start.sh)' interactively once to set up (email, terms, benchmark). Then restart the service."
fi

# Create systemd service for Nosana host
cat <<EOF > /etc/systemd/system/nosana-host.service
[Unit]
Description=Nosana Host Service
After=docker.service
Requires=docker.service

[Service]
User=$NOSANA_USER
ExecStart=/bin/bash -c 'tmux new-session -d -s nosana-host "bash <(wget -qO- https://nosana.com/start.sh)" ; while tmux has-session -t nosana-host 2>/dev/null; do sleep 1; done'
ExecStop=/bin/bash -c 'tmux kill-session -t nosana-host 2>/dev/null'
Restart=on-failure
KillMode=process
RestartSec=5s

[Install]
WantedBy=multi-user.target
EOF

# Reload systemd and enable service
systemctl daemon-reload
systemctl enable nosana-host.service
# Start the service (simulates boot behavior without reboot)
systemctl start nosana-host.service
echo "Nosana host service created and started."

# Configure tmux to be minimal/invisible with red bold status bar instructions
sudo -u $NOSANA_USER bash -c 'cat <<EOF > ~/.tmux.conf
set -g status on
set -g status-style bg=black,fg=red,bold
set -g status-left ""
set -g status-right "Detach: Ctrl+q or Ctrl+b d | Then 'exit' to logout"
set -g mouse on  # Optional: for easier scrolling if needed
set -g history-limit 10000
bind-key -n C-q detach-client
EOF'
tmux kill-session -t nosana-host 2>/dev/null || true
systemctl start nosana-host.service
tmux source-file /home/$NOSANA_USER/.tmux.conf 2>/dev/null || true
echo "tmux configured for minimal UI with red bold status bar instructions, Ctrl+q for detach. Config sourced and session restarted."

# Fix 1: Set up TTY3 auto-attach with proper logout handling
BASH_RC="/home/$NOSANA_USER/.bashrc"
# Remove any existing TTY3 configuration
sed -i '/if \[ "$(tty)" = "\/dev\/tty3" \]; then/,/fi/d' "$BASH_RC" 2>/dev/null || true

# Add new configuration that ensures logout after detach
cat <<'EOF' >> "$BASH_RC"
if [ "$(tty)" = "/dev/tty3" ]; then
  # Trap to ensure logout on any exit
  trap 'exit' INT TERM
  echo "Attached to Nosana host tmux session. Instructions in status bar below."
  tmux attach-session -t nosana-host 2>/dev/null || echo "No nosana-host session found."
  # Force logout after tmux exits for any reason
  logout
fi
EOF
chown $NOSANA_USER:$NOSANA_USER "$BASH_RC"
echo "Added TTY3 auto-attach with forced logout to .bashrc."

# Remove old getty override if exists
rm -rf /etc/systemd/system/getty@tty3.service.d
systemctl daemon-reload

# Set KillUserProcesses=no for safety (to keep tmux running after logout)
LOGIND_CONF="/etc/systemd/logind.conf"
if grep -q "^KillUserProcesses=yes" "$LOGIND_CONF" 2>/dev/null || ! grep -q "^KillUserProcesses=" "$LOGIND_CONF" 2>/dev/null; then
  sed -i 's/^KillUserProcesses=yes/KillUserProcesses=no/' "$LOGIND_CONF" 2>/dev/null || echo "KillUserProcesses=no" >> "$LOGIND_CONF"
  systemctl restart systemd-logind
  echo "Set KillUserProcesses=no in logind.conf for tmux persistence after logout."
else
  echo "KillUserProcesses already set to no; skipping."
fi

# Make TTY3 default login prompt on boot
cat <<'EOF' > /etc/systemd/system/switch-to-tty3.service
[Unit]
Description=Switch to TTY3 on boot
After=multi-user.target

[Service]
Type=oneshot
ExecStart=/usr/bin/chvt 3
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
systemctl enable switch-to-tty3.service
echo "Created service to switch to TTY3 on boot."

# Fix 2: Add custom persistent terminal to Cockpit with proper terminal support
# Remove any old directories first
rm -rf /usr/share/cockpit/nosana-terminal 2>/dev/null || true
rm -rf /usr/share/cockpit/nosana 2>/dev/null || true

# Create the directory with the correct name that Cockpit expects
NOSANA_DIR="/usr/share/cockpit/nosana"
mkdir -p "$NOSANA_DIR"

# Create manifest.json
cat <<EOF > "$NOSANA_DIR/manifest.json"
{
    "version": 0,
    "requires": {
        "cockpit": "186"
    },
    "menu": {
        "index": {
            "label": "Nosana Terminal",
            "order": 100,
            "docs": [
                {
                    "label": "Nosana Terminal",
                    "url": "index"
                }
            ]
        }
    }
}
EOF

# Create the JavaScript file with proper terminal initialization
cat <<'EOF' > "$NOSANA_DIR/terminal.js"
// Load required Cockpit modules
require([
    "base1/cockpit",
    "base1/terminal"
], function(cockpit, terminal) {
    // Wait for Cockpit to be ready
    cockpit.transport.wait(function() {
        console.log("Cockpit ready, initializing Nosana terminal...");
        
        const terminalElement = document.getElementById('terminal');
        const errorContainer = document.getElementById('error-container');
        
        try {
            // Create channel for terminal
            const channel = cockpit.channel({
                payload: "stream",
                spawn: ["tmux", "attach-session", "-t", "nosana-host"],
                pty: true,
                environ: ["TERM=xterm-256color"],
                err: "out"
            });
            
            // Initialize terminal
            if (terminal && terminal.Terminal) {
                const term = new terminal.Terminal(terminalElement);
                
                // Handle data from process
                channel.addEventListener("message", function (event, data) {
                    term.write(data);
                });
                
                // Handle input to process
                term.onData(function(data) {
                    channel.send(data);
                });
                
                // Handle channel close
                channel.addEventListener("close", function (event, options) {
                    console.log("Terminal session ended", options);
                    term.write("\r\n\r\n[Session ended - refresh to reconnect]\r\n");
                    
                    // Check if session still exists
                    cockpit.spawn(["tmux", "has-session", "-t", "nosana-host"], { err: "ignore" })
                        .fail(function() {
                            errorContainer.innerHTML = '<div class="connection-error">Session not found. Attempting to restart service...</div>';
                            cockpit.spawn(["systemctl", "restart", "nosana-host.service"], { superuser: "try" })
                                .done(function() {
                                    setTimeout(function() {
                                        location.reload();
                                    }, 3000);
                                    errorContainer.innerHTML += '<p>Service restarted. Reloading in 3 seconds...</p>';
                                });
                        });
                });
                
                // Start the channel
                channel.send(""); // Send empty string to start
                
            } else {
                throw new Error("Terminal module not loaded properly");
            }
            
        } catch (e) {
            console.error("Failed to initialize terminal:", e);
            errorContainer.innerHTML = '<div class="connection-error">Failed to initialize terminal: ' + e.message + '</div>';
            errorContainer.innerHTML += '<p>Make sure the nosana-host tmux session is running.</p>';
        }
    });
});
EOF

# Create the CSS file separately to avoid CSP issues
cat <<'EOF' > "$NOSANA_DIR/terminal.css"
body {
    margin: 0;
    padding: 0;
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
}
.pf-c-page__main {
    background-color: #151515;
}
.terminal-container {
    height: calc(100vh - 8rem);
    background-color: #000;
    padding: 1rem;
    position: relative;
}
#terminal {
    height: 100%;
    width: 100%;
}
#terminal .xterm {
    height: 100%;
}
.connection-error {
    color: #ff6b6b;
    padding: 1rem;
    background-color: #2d2d2d;
    border-radius: 4px;
    margin: 1rem;
}
.pf-c-content h1 {
    color: #fff;
}
.pf-c-content p {
    color: #d2d2d2;
}
EOF

# Create index.html that uses external files and loads terminal module
cat <<'EOF' > "$NOSANA_DIR/index.html"
<!DOCTYPE html>
<html>
<head>
    <title>Nosana Terminal</title>
    <meta charset="utf-8">
    <link href="../base1/cockpit.css" type="text/css" rel="stylesheet">
    <link href="terminal.css" type="text/css" rel="stylesheet">
    <script type="text/javascript" src="../base1/cockpit.js"></script>
    <script type="text/javascript" src="../base1/terminal.js"></script>
    <script type="text/javascript" src="terminal.js"></script>
</head>
<body>
    <div class="pf-c-page">
        <main class="pf-c-page__main" tabindex="-1">
            <section class="pf-c-page__main-section pf-m-light">
                <div class="pf-c-content">
                    <h1>Nosana Terminal</h1>
                    <p>Connected to nosana-host tmux session</p>
                </div>
            </section>
            <section class="pf-c-page__main-section">
                <div class="terminal-container">
                    <div id="terminal"></div>
                    <div id="error-container"></div>
                </div>
            </section>
        </main>
    </div>
</body>
</html>
EOF

# Create tools.html that redirects to index (Cockpit is looking for this)
cat <<'EOF' > "$NOSANA_DIR/tools.html"
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="refresh" content="0; url=index.html">
</head>
<body>
    <p>Redirecting to Nosana Terminal...</p>
</body>
</html>
EOF

# Set proper permissions
chown -R root:root "$NOSANA_DIR"
chmod -R 755 "$NOSANA_DIR"

echo "Custom Nosana Terminal files created with proper terminal support."

# Fix 3: Update GPU Monitor to use external CSS instead of inline styles
GPU_DIR="/usr/share/cockpit/gpu-monitor"
if [ -d "$GPU_DIR" ]; then
    echo "Fixing GPU Monitor CSP issues..."
    
    # Create external CSS file for GPU monitor
    cat <<'EOF' > "$GPU_DIR/gpu-monitor.css"
.progress {
    height: 20px;
    background-color: #e0e0e0;
    border-radius: 4px;
    overflow: hidden;
    margin: 5px 0;
}
.progress-bar {
    height: 100%;
    background-color: #4CAF50;
    transition: width 0.3s ease;
}
.gpu-metric {
    margin: 10px 0;
}
.gpu-metric label {
    font-weight: bold;
    display: block;
    margin-bottom: 5px;
}
EOF
    
    # Update the gpu-monitor.js to use CSS classes instead of inline styles
    if [ -f "$GPU_DIR/gpu-monitor.js" ]; then
        # Backup original
        cp "$GPU_DIR/gpu-monitor.js" "$GPU_DIR/gpu-monitor.js.bak"
        
        # Replace inline styles with classes
        sed -i 's/style="[^"]*"//g' "$GPU_DIR/gpu-monitor.js"
        sed -i 's/<div class="progress-bar"/<div class="progress-bar" data-value/g' "$GPU_DIR/gpu-monitor.js"
        
        echo "GPU Monitor updated to use external CSS."
    fi
    
    # Update index.html to include the CSS file
    if grep -q "gpu-monitor.css" "$GPU_DIR/index.html"; then
        echo "GPU Monitor CSS already linked."
    else
        sed -i '/<\/head>/i <link href="gpu-monitor.css" type="text/css" rel="stylesheet">' "$GPU_DIR/index.html"
        echo "Added GPU Monitor CSS link to index.html."
    fi
fi

# Restart Cockpit to load the new modules
systemctl restart cockpit.socket cockpit
echo "Cockpit restarted to load updated modules."

# Final instructions
echo ""
echo "============================================"
echo "Installation complete! (v$VERSION)"
echo "============================================"
echo ""
echo "FIXES APPLIED:"
echo "1. TTY3 logout: Now uses 'logout' command after tmux detach"
echo "2. Nosana Terminal: Fixed 'cockpit.terminal is not a function' error"
echo "3. GPU Monitor: Moved inline styles to external CSS file"
echo ""
echo "To verify installation:"
echo "1. Check service status: systemctl status nosana-host"
echo "2. Check tmux session: tmux ls"
echo "3. Access Cockpit: https://192.168.0.100:9090"
echo "   - Clear browser cache completely (Ctrl+Shift+Delete)"
echo "   - Look for 'Nosana Terminal' in the menu"
echo ""
echo "TTY3 Features:"
echo "- Automatically switches to TTY3 on boot"
echo "- Login automatically attaches to Nosana tmux session"
echo "- Ctrl+q detaches AND logs out (returns to login prompt)"
echo ""
echo "To test TTY3:"
echo "- Press Ctrl+Alt+F3 to switch to TTY3"
echo "- Login with your credentials"
echo "- You'll automatically attach to the Nosana tmux session"
echo "- Press Ctrl+q to detach and logout"
echo ""
echo "Troubleshooting commands:"
echo "  sudo journalctl -u nosana-host -f"
echo "  sudo journalctl -u cockpit -f"
echo "  sudo ls -la /usr/share/cockpit/nosana/"
echo ""
[sudo] password for md: 
Nosana Frontend Install Script - Version: 0.00.19 - Timestamp: 18:03:57 28JUL25
Initial cleanup completed.
Using existing user: md for Nosana operations.
Hit:1 http://us.archive.ubuntu.com/ubuntu noble InRelease
Hit:2 https://nvidia.github.io/libnvidia-container/stable/deb/amd64  InRelease                                                                            
Hit:3 http://security.ubuntu.com/ubuntu noble-security InRelease                                                                                          
Get:4 http://us.archive.ubuntu.com/ubuntu noble-updates InRelease [126 kB]                                                                                
Hit:5 https://download.docker.com/linux/ubuntu noble InRelease                                                                              
Get:6 http://us.archive.ubuntu.com/ubuntu noble-backports InRelease [126 kB]                                      
Get:7 http://us.archive.ubuntu.com/ubuntu noble-updates/main amd64 Packages [1282 kB]
Hit:8 https://ppa.launchpadcontent.net/graphics-drivers/ppa/ubuntu noble InRelease
Get:9 http://us.archive.ubuntu.com/ubuntu noble-updates/main amd64 Components [163 kB]
Get:10 http://us.archive.ubuntu.com/ubuntu noble-updates/restricted amd64 Components [212 B]
Get:11 http://us.archive.ubuntu.com/ubuntu noble-updates/universe amd64 Packages [1113 kB]
Get:12 http://us.archive.ubuntu.com/ubuntu noble-updates/universe amd64 Components [377 kB]
Get:13 http://us.archive.ubuntu.com/ubuntu noble-updates/multiverse amd64 Components [940 B]
Get:14 http://us.archive.ubuntu.com/ubuntu noble-backports/main amd64 Components [7056 B]
Get:15 http://us.archive.ubuntu.com/ubuntu noble-backports/restricted amd64 Components [216 B]
Get:16 http://us.archive.ubuntu.com/ubuntu noble-backports/universe amd64 Components [28.3 kB]
Get:17 http://us.archive.ubuntu.com/ubuntu noble-backports/multiverse amd64 Components [212 B]
Fetched 3224 kB in 1s (3687 kB/s)                                
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
2 packages can be upgraded. Run 'apt list --upgradable' to see them.
tmux already installed, skipping.
wget already installed, skipping.
curl already installed, skipping.
Docker already installed (detected via command -v docker), skipping docker.io installation to avoid conflicts.
Synchronizing state of docker.service with SysV service script with /usr/lib/systemd/systemd-sysv-install.
Executing: /usr/lib/systemd/systemd-sysv-install enable docker
Nosana host service created and started.
tmux configured for minimal UI with red bold status bar instructions, Ctrl+q for detach. Config sourced and session restarted.
Added TTY3 auto-attach with forced logout to .bashrc.
Set KillUserProcesses=no in logind.conf for tmux persistence after logout.
Created service to switch to TTY3 on boot.
Custom Nosana Terminal files created with proper terminal support.
Fixing GPU Monitor CSP issues...
GPU Monitor updated to use external CSS.
GPU Monitor CSS already linked.
Cockpit restarted to load updated modules.

============================================
Installation complete! (v0.00.19)
============================================

FIXES APPLIED:
1. TTY3 logout: Now uses 'logout' command after tmux detach
2. Nosana Terminal: Fixed 'cockpit.terminal is not a function' error
3. GPU Monitor: Moved inline styles to external CSS file

To verify installation:
1. Check service status: systemctl status nosana-host
2. Check tmux session: tmux ls
3. Access Cockpit: https://192.168.0.100:9090
   - Clear browser cache completely (Ctrl+Shift+Delete)
   - Look for 'Nosana Terminal' in the menu

TTY3 Features:
- Automatically switches to TTY3 on boot
- Login automatically attaches to Nosana tmux session
- Ctrl+q detaches AND logs out (returns to login prompt)

To test TTY3:
- Press Ctrl+Alt+F3 to switch to TTY3
- Login with your credentials
- You'll automatically attach to the Nosana tmux session
- Press Ctrl+q to detach and logout

Troubleshooting commands:
  sudo journalctl -u nosana-host -f
  sudo journalctl -u cockpit -f
  sudo ls -la /usr/share/cockpit/nosana/

md@nn06:~$ sudo reboot

md@nn06:~$ sudo journalctl -u nosana-host -f
  sudo journalctl -u cockpit -f
  sudo ls -la /usr/share/cockpit/nosana/
[sudo] password for md: 
Jul 28 18:05:41 nn06 systemd[1]: Started nosana-host.service - Nosana Host Service.
^C
Jul 28 18:09:21 nn06 cockpit-tls[6876]: cockpit-tls: gnutls_handshake failed: A TLS fatal alert has been received.
Jul 28 18:09:21 nn06 cockpit-tls[6876]: cockpit-tls: gnutls_handshake failed: A TLS fatal alert has been received.
Jul 28 18:09:21 nn06 cockpit-tls[6876]: cockpit-tls: gnutls_handshake failed: A TLS fatal alert has been received.
Jul 28 18:09:21 nn06 cockpit-tls[6876]: cockpit-tls: gnutls_handshake failed: A TLS fatal alert has been received.
Jul 28 18:09:21 nn06 cockpit-tls[6876]: cockpit-tls: gnutls_handshake failed: A TLS fatal alert has been received.
Jul 28 18:09:22 nn06 cockpit-tls[6876]: cockpit-tls: gnutls_handshake failed: A TLS fatal alert has been received.
Jul 28 18:10:25 nn06 cockpit-tls[6876]: cockpit-tls: gnutls_handshake failed: A TLS fatal alert has been received.
Jul 28 18:10:25 nn06 cockpit-tls[6876]: cockpit-tls: gnutls_handshake failed: A TLS fatal alert has been received.
Jul 28 18:10:25 nn06 cockpit-tls[6876]: cockpit-tls: gnutls_handshake failed: A TLS fatal alert has been received.
Jul 28 18:10:25 nn06 cockpit-tls[6876]: cockpit-tls: gnutls_handshake failed: A TLS fatal alert has been received.
^C
total 28
drwxr-xr-x  2 root root 4096 Jul 28 18:04 .
drwxr-xr-x 17 root root 4096 Jul 28 18:04 ..
-rwxr-xr-x  1 root root 1085 Jul 28 18:04 index.html
-rwxr-xr-x  1 root root  342 Jul 28 18:04 manifest.json
-rwxr-xr-x  1 root root  653 Jul 28 18:04 terminal.css
-rwxr-xr-x  1 root root 3058 Jul 28 18:04 terminal.js
-rwxr-xr-x  1 root root  166 Jul 28 18:04 tools.html
md@nn06:~$ 

ctrl-q only detaches from tmux, but does not logout.

Nosana Terminal only shows:
Nosana Terminal
Connected to nosana-host tmux session


Navigated to https://192.168.0.100:9090/
192.168.0.100/:1 Refused to execute script from 'https://192.168.0.100:9090/cockpit/@localhost/*/po.manifest.js' because its MIME type ('text/html') is not executable, and strict MIME type checking is enabled.Understand this error
192.168.0.100/:1 Refused to execute script from 'https://192.168.0.100:9090/cockpit/@localhost/*/po.js' because its MIME type ('text/html') is not executable, and strict MIME type checking is enabled.Understand this error
:9090/cockpit/@localhost/nosana/index.html#/:1 Refused to apply style from 'https://192.168.0.100:9090/cockpit/@localhost/base1/cockpit.css' because its MIME type ('text/html') is not a supported stylesheet MIME type, and strict MIME checking is enabled.Understand this error
:9090/cockpit/@localhost/nosana/index.html#/:1 Refused to execute script from 'https://192.168.0.100:9090/cockpit/@localhost/base1/terminal.js' because its MIME type ('text/html') is not executable, and strict MIME type checking is enabled.Understand this error
terminal.js:2 Uncaught ReferenceError: require is not defined
    at terminal.js:2:1


GPU Monitor lost it's green bars and only shows:
NVIDIA GPU Monitor
Auto-refreshing every second
NVIDIA GeForce RTX 4090 (GPU 0)
Driver: 575.64.03
PCIe: Gen 4 x16
Temperature: 36°C
GPU Usage: 0%
Memory: 22.86 GB / 23.99 GB (95.3%)
Power: 33.0W / 480.0W (6.9%)
Fan Speed: 0%
Clocks: GPU: 210 MHz, Mem: 405 MHz
Processes:
PID 6513: 22908 MB

Navigated to https://192.168.0.100:9090/
192.168.0.100/:1 Refused to execute script from 'https://192.168.0.100:9090/cockpit/@localhost/*/po.manifest.js' because its MIME type ('text/html') is not executable, and strict MIME type checking is enabled.Understand this error
192.168.0.100/:1 Refused to execute script from 'https://192.168.0.100:9090/cockpit/@localhost/*/po.js' because its MIME type ('text/html') is not executable, and strict MIME type checking is enabled.Understand this error
:9090/cockpit/@localhost/nosana/index.html#/:1 Refused to apply style from 'https://192.168.0.100:9090/cockpit/@localhost/base1/cockpit.css' because its MIME type ('text/html') is not a supported stylesheet MIME type, and strict MIME checking is enabled.Understand this error
:9090/cockpit/@localhost/nosana/index.html#/:1 Refused to execute script from 'https://192.168.0.100:9090/cockpit/@localhost/base1/terminal.js' because its MIME type ('text/html') is not executable, and strict MIME type checking is enabled.Understand this error
terminal.js:2 Uncaught ReferenceError: require is not defined
    at terminal.js:2:1
(anonymous) @ terminal.js:2Understand this error
:9090/cockpit/@localhost/gpu-monitor/index.html#/:1 Refused to apply style from 'https://192.168.0.100:9090/cockpit/@localhost/base1/cockpit.css' because its MIME type ('text/html') is not a supported stylesheet MIME type, and strict MIME checking is enabled.Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-A9+o8JmUTwJilF3HOqIQNc5jwAzDFLWTGE4RD5O8SFc='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-A9+o8JmUTwJilF3HOqIQNc5jwAzDFLWTGE4RD5O8SFc='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-7Ib/ASTrPKTlh27fT1WmzMcba7fpWcLgH6kSWADGDG0='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-7Ib/ASTrPKTlh27fT1WmzMcba7fpWcLgH6kSWADGDG0='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-7Ib/ASTrPKTlh27fT1WmzMcba7fpWcLgH6kSWADGDG0='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-7Ib/ASTrPKTlh27fT1WmzMcba7fpWcLgH6kSWADGDG0='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-7Ib/ASTrPKTlh27fT1WmzMcba7fpWcLgH6kSWADGDG0='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-7Ib/ASTrPKTlh27fT1WmzMcba7fpWcLgH6kSWADGDG0='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-A9+o8JmUTwJilF3HOqIQNc5jwAzDFLWTGE4RD5O8SFc='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-A9+o8JmUTwJilF3HOqIQNc5jwAzDFLWTGE4RD5O8SFc='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-A9+o8JmUTwJilF3HOqIQNc5jwAzDFLWTGE4RD5O8SFc='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-A9+o8JmUTwJilF3HOqIQNc5jwAzDFLWTGE4RD5O8SFc='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-A9+o8JmUTwJilF3HOqIQNc5jwAzDFLWTGE4RD5O8SFc='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-A9+o8JmUTwJilF3HOqIQNc5jwAzDFLWTGE4RD5O8SFc='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-7Ib/ASTrPKTlh27fT1WmzMcba7fpWcLgH6kSWADGDG0='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-A9+o8JmUTwJilF3HOqIQNc5jwAzDFLWTGE4RD5O8SFc='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-A9+o8JmUTwJilF3HOqIQNc5jwAzDFLWTGE4RD5O8SFc='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-7Ib/ASTrPKTlh27fT1WmzMcba7fpWcLgH6kSWADGDG0='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-7Ib/ASTrPKTlh27fT1WmzMcba7fpWcLgH6kSWADGDG0='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-7Ib/ASTrPKTlh27fT1WmzMcba7fpWcLgH6kSWADGDG0='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-A9+o8JmUTwJilF3HOqIQNc5jwAzDFLWTGE4RD5O8SFc='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-A9+o8JmUTwJilF3HOqIQNc5jwAzDFLWTGE4RD5O8SFc='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-A9+o8JmUTwJilF3HOqIQNc5jwAzDFLWTGE4RD5O8SFc='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-A9+o8JmUTwJilF3HOqIQNc5jwAzDFLWTGE4RD5O8SFc='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-A9+o8JmUTwJilF3HOqIQNc5jwAzDFLWTGE4RD5O8SFc='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-A9+o8JmUTwJilF3HOqIQNc5jwAzDFLWTGE4RD5O8SFc='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-7Ib/ASTrPKTlh27fT1WmzMcba7fpWcLgH6kSWADGDG0='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-7Ib/ASTrPKTlh27fT1WmzMcba7fpWcLgH6kSWADGDG0='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-7Ib/ASTrPKTlh27fT1WmzMcba7fpWcLgH6kSWADGDG0='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-A9+o8JmUTwJilF3HOqIQNc5jwAzDFLWTGE4RD5O8SFc='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-7Ib/ASTrPKTlh27fT1WmzMcba7fpWcLgH6kSWADGDG0='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-7Ib/ASTrPKTlh27fT1WmzMcba7fpWcLgH6kSWADGDG0='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-A9+o8JmUTwJilF3HOqIQNc5jwAzDFLWTGE4RD5O8SFc='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-A9+o8JmUTwJilF3HOqIQNc5jwAzDFLWTGE4RD5O8SFc='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-A9+o8JmUTwJilF3HOqIQNc5jwAzDFLWTGE4RD5O8SFc='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-A9+o8JmUTwJilF3HOqIQNc5jwAzDFLWTGE4RD5O8SFc='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-A9+o8JmUTwJilF3HOqIQNc5jwAzDFLWTGE4RD5O8SFc='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-A9+o8JmUTwJilF3HOqIQNc5jwAzDFLWTGE4RD5O8SFc='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-A9+o8JmUTwJilF3HOqIQNc5jwAzDFLWTGE4RD5O8SFc='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-A9+o8JmUTwJilF3HOqIQNc5jwAzDFLWTGE4RD5O8SFc='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-A9+o8JmUTwJilF3HOqIQNc5jwAzDFLWTGE4RD5O8SFc='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-iMB/VrCCgMIGYSY/hgASmnXPNDQTShnI0JsSfrR6ma8='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-o77JFTGqniK/1qbbCizuKNpHaT1bbyOr6ZSy8qFWwAM='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-A9+o8JmUTwJilF3HOqIQNc5jwAzDFLWTGE4RD5O8SFc='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.

(anonymous) @ gpu-monitor.js:66
K @ cockpit.js:5
(anonymous) @ cockpit.js:5
k @ cockpit.js:5Understand this error
gpu-monitor.js:66 Refused to apply inline style because it violates the following Content Security Policy directive: "default-src 'self'". Either the 'unsafe-inline' keyword, a hash ('sha256-NjYDAvf3Yswi9GqXn8q5mE3okYa3Q4PuzJ0DkAhe4yQ='), or a nonce ('nonce-...') is required to enable inline execution. Note that hashes do not apply to event handlers, style attributes and javascript: navigations unless the 'unsafe-hashes' keyword is present. Note also that 'style-src' was not explicitly set, so 'default-src' is used as a fallback.
